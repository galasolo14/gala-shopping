{"version":3,"sources":["./src/app/toolbar/toolbar.component.ts","./src/app/toolbar/toolbar.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/add-product/add-product.component.ts","./src/app/add-product/add-product.component.html","./src/app/app.module.ts","./src/app/dialog/dialog.component.ts","./src/app/dialog/dialog.component.html","./src/app/item/item.component.ts","./src/app/item/item.component.html","./src/app/shop/shop.component.ts","./src/app/shop/shop.component.html","./src/app/cart/cart.component.ts","./src/app/cart/cart.component.html","./src/app/wrapper/wrapper.component.ts","./src/app/wrapper/wrapper.component.html","./src/app/signup/signup.component.ts","./src/app/signup/signup.component.html","./src/app/order/order.component.ts","./src/app/order/order.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./src/app/products/products.component.ts","./src/app/products/products.component.html","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AAE/B;AACyB;;;;;;;ICD/C,uEAAsB;IAAA,sEAAW;IAAA,4DAAO;;;IACxC,uEAAqB;IAAA,uDAAc;IAAA,4DAAO;;;IAArB,0DAAc;IAAd,2FAAc;;;;IAGjC,4EAAiF;IAA3B,2TAAyB;IAAE,iEAAM;IAAA,4DAAS;;ADI/F,MAAM,gBAAgB;IAO3B,YAAoB,MAAa;QAAb,WAAM,GAAN,MAAM,CAAO;QALvB,eAAU,GAAG,IAAI,0DAAY,EAAE,CAAC;QAE1C,WAAM,GAAG,KAAK,CAAC;QACf,SAAI,GAAG,EAAE,CAAC;QAGR,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACtB,CAAC;IAEF,QAAQ;IAER,CAAC;IAED,WAAW;QACT,IAAG,IAAI,CAAC,QAAQ,EAAC;YACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;YACpC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;SACpB;IACH,CAAC;IAED,aAAa;QACX,IAAI;YACF,4CAAK,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAC9B,CAAC,GAAG,EAAE,EAAE;gBACN,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBAChC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACpB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACpC,CAAC,CACF,CAAC;SACL;QAAC,OAAM,GAAG,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SACpB;IACH,CAAC;;gFAlCU,gBAAgB;gGAAhB,gBAAgB;QCV7B,oEACI;QAAA,iFACA;QAAA,8GAAwC;QACxC,8GAA0C;QACxC,0EAAqB;QAAA,wFAA6B;QAAA,4DAAO;QACzD,qEAAoC;QACpC,kHAAgG;QAClG,4DAAc;QAClB,4DAAI;;QANO,0DAAa;QAAb,6EAAa;QACb,0DAAY;QAAZ,4EAAY;QAGR,0DAAY;QAAZ,4EAAY;;6FDId,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;sGAEU,QAAQ;kBAAhB,mDAAK;YACI,UAAU;kBAAnB,oDAAM;;;;;;;;;;;;;;AEZT;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAA0C;;;AASnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,QAAQ,CAAC;KAIlB;;wEALY,YAAY;4FAAZ,YAAY;QCTzB,yEACI;QAAA,2EAA+B;QAEnC,4DAAM;;6FDMO,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AAC9B;AACwC;;;;;;;;;;;ICFlE,6EAA+F;IAAxB,8TAAsB;IAAE,oEAAQ;IAAA,4DAAS;;;IAI5G,qEAAsB;IAAA,0EAAe;IAAA,4DAAK;;;IAC1C,qEAAqB;IAAA,uEAAY;IAAA,4DAAK;;;IAM9B,4EAA8D;IAAA,oGAAyC;IAAA,4DAAY;;;IAgBnH,4EAAmE;IAAA,4EAAiB;IAAA,4DAAY;;;IAUhG,4EACI;IAAA,uGACJ;IAAA,4DAAY;;;IAeZ,4EAA4E;IAAA,qGAA0C;IAAA,4DAAY;;;IAClI,4EAAuD;IAAA,oFAAyB;IAAA,4DAAY;;;IAsB5F,4EAAoE;IAAA,qGAA0C;IAAA,4DAAY;;;;IASlI,6EAAmH;IAAzE,2TAAkB;IAAuD,+DAAI;IAAA,4DAAS;;;IAAjD,mGAAmC;;;;IAElH,6EAAmF;IAAzC,+TAAsB;IAAmB,uEAAY;IAAA,4DAAS;;AD/ErG,MAAM,mBAAmB;IA+B9B;QA5BA,mBAAc,GAAG,IAAI,wDAAS,CAAC;YAC7B,IAAI,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YACpG,QAAQ,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACrD,KAAK,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC,CAAC;YAC1H,WAAW,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3G,OAAO,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;SAC9E,CAAC;QAUF,YAAO,GAAE;YACP,IAAI,EAAE,EAAE;YACR,QAAQ,EAAE,MAAM;YAChB,KAAK,EAAE,EAAE;YACT,WAAW,EAAE,EAAE;YACf,OAAO,EAAC,EAAE;SACX,CAAC;QAEF,gBAAW,GAAE,EAAE,CAAC;QAChB,aAAQ,GAAG,KAAK,CAAC;IAGD,CAAC;IApBjB,IAAI,IAAI,KAAG,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,GAAC;IAClD,IAAI,QAAQ,KAAG,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,UAAU,CAAC,GAAC;IAC1D,IAAI,KAAK,KAAG,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,OAAO,CAAC,GAAC;IACpD,IAAI,WAAW,KAAG,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,aAAa,CAAC,GAAC;IAChE,IAAI,OAAO,KAAG,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,SAAS,CAAC,GAAC;IAkBxD,QAAQ;IAER,CAAC;IAED,WAAW;QACT,mBAAmB;QACnB,cAAc;QACd,sBAAsB;QACtB,eAAe;QACf,qBAAqB;QACrB,eAAe;QACf,KAAK;QAEL,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;YACxB,IAAI,EAAE,EAAE;YACR,QAAQ,EAAE,EAAE;YACZ,KAAK,EAAE,EAAE;YACT,WAAW,EAAE,EAAE;YACf,OAAO,EAAC,EAAE;SACX,CAAC;IAGJ,CAAC;IAED,UAAU;QACR,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,sCAAsC;IACtC,iCAAiC;IACjC,IAAI;IAEJ,UAAU,CAAC,KAAK;QACd,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACzC,8DAA8D;QAC9D,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE;IACzE,CAAC;IAID,OAAO;QACL,MAAM,UAAU,GAAG,IAAI,QAAQ,EAAE,CAAC;QAClC,UAAU,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAC5C,KAAK,CAAC,aAAa,EAAE;YACnB,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,UAAU;SACjB,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;aACvB,IAAI,CAAC,IAAI,CAAC,EAAE;YACX,IAAG,IAAI,EAAC;gBACN,KAAK,CAAC,mBAAmB,CAAC,CAAC;aAC5B;QACH,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;YACb,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,WAAW;QACT,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;QACvC,IAAI;YACF,4CAAK,CAAC,IAAI,CAAC,mBAAmB,EAAE;gBAC9B,OAAO,EAAE,IAAI,CAAC,cAAc,CAAC,KAAK;aACnC,CAAC,CAAC,IAAI,CACH,CAAC,GAAG,EAAE,EAAE;gBACN,IAAG,GAAG,CAAC,MAAM,IAAI,GAAG;oBACpB,KAAK,CAAC,+BAA+B,CAAC,CAAC;gBACvC,IAAI,CAAC,WAAW,EAAE,CAAC;YACrB,CAAC,CACF,CAAC;SACL;QAAC,OAAM,GAAG,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SACpB;IACH,CAAC;IAED,MAAM;QACJ,MAAM,EAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,WAAW,EAAG,OAAO,EAAC,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;QACjF,IACE,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,IAAG,QAAQ,IAAI,MAAM;YAC1D,KAAK,CAAC,MAAM,IAAG,CAAC,IAAI,WAAW,CAAC,MAAM,GAAE,CAAC;YACzC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAC;YACjB,KAAK,CAAC,oCAAoC,CAAC,CAAC;SAC/C;aACG;YACF,IAAI,CAAC,OAAO,EAAE,CAAC;YACf,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;IACH,CAAC;IAED,WAAW;QACT,IAAG,IAAI,CAAC,WAAW,EAAC;YAClB,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC1B;IACH,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,iCAAiC;QACjC,2DAA2D;QAC3D,kEAAkE;QAClE,4DAA4D;QAC5D,wEAAwE;QACxE,gEAAgE;QAChE,0CAA0C;QAC1C,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC;YAC3B,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI;YAC3B,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ;YACnC,KAAK,EAAG,IAAI,CAAC,WAAW,CAAC,KAAK;YAC9B,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,WAAW;YACzC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO;SAClC,CAAC;QACF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;IACzC,CAAC;IAED,UAAU;QACR,IAAI;YACF,4CAAK,CAAC,IAAI,CAAC,oBAAoB,EAAE;gBAC/B,OAAO,EAAE,IAAI,CAAC,cAAc,CAAC,KAAK;gBAClC,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,GAAG;aACzB,CAAC,CAAC,IAAI,CACH,CAAC,GAAG,EAAE,EAAE;gBACN,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,IAAG,GAAG,CAAC,MAAM,IAAI,GAAG,EAAC;oBACnB,IAAI,CAAC,WAAW,EAAE,CAAC;oBACnB,OAAO,CAAC,GAAG,CAAE,GAAG,CAAC,IAAI,CAAC,CAAC;oBACvB,KAAK,CAAC,mBAAmB,CAAC,CAAC;oBAC3B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;iBACvB;YACH,CAAC,CACF,CAAC;SACL;QAAC,OAAM,GAAG,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SACpB;IACH,CAAC;;sFArKU,mBAAmB;mGAAnB,mBAAmB;QCThC,qHAAgH;QAChH,gEAEA;QAAA,0EACI;QAAA,6GAA0C;QAC1C,6GAAsC;QACtC,sEACI;QAAA,oFACI;QAAA,4EAAW;QAAA,uEAAY;QAAA,4DAAY;QACnC,2EACA;QAD4D,0MAAuC;QAAnG,4DACA;QAAA,+EAAuB;QAAA,4EAAe;QAAA,4DAAW;QACjD,6HAAmH;QACvH,4DAAiB;QACrB,4DAAM;QAEN,uEACI;QAAA,qFACI;QAAA,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,iFACE;QADqC,gNAAyC;QAC9E,iFAA6C;QAAA,+EAAmB;QAAA,4DAAa;QAC7E,iFAA6C;QAAA,wEAAY;QAAA,4DAAa;QACtE,iFAA6C;QAAA,0EAAc;QAAA,4DAAa;QACxE,kFAA6C;QAAA,0EAAc;QAAA,4DAAa;QACxE,kFAA6C;QAAA,qEAAS;QAAA,4DAAa;QACnE,kFAA6C;QAAA,uEAAW;QAAA,4DAAa;QACrE,kFAA6C;QAAA,kEAAM;QAAA,4DAAa;QAClE,4DAAa;QACb,6HAAgG;QACpG,4DAAiB;QACrB,4DAAM;QAIN,uEACI;QAAA,qFACI;QAAA,6EAAW;QAAA,yEAAa;QAAA,4DAAY;QACpC,6EACA;QADmD,4MAAwC;QAA3F,4DACA;QAAA,6HAEY;QAEhB,4DAAiB;QAErB,4DAAM;QAEN,uEACI;QAAA,qFACI;QAAA,6EAAW;QAAA,wEAAY;QAAA,4DAAY;QACnC,6EAMA;QADA,kNAA8C;QAL9C,4DAMA;QAAA,6HAAkI;QAClI,6HAA4F;QAChG,4DAAiB;QACrB,4DAAM;QAEN,uEACI;QAAA,6EAAqB;QAAA,mFAAuB;QAAA,4DAAQ;QACpD,iEACA;QAAA,6EACA;QADmE,mJAAU,sBAAkB,IAAC;QAAhG,4DACA;QAAA,iEAEJ;QAAA,4DAAM;QAEN,uEACI;QAAA,qFACI;QAAA,6EAAW;QAAA,2EAAe;QAAA,4DAAY;QACtC,6EAMA;QADA,8MAA0C;QAL1C,4DAMA;QAAA,4EAAW;QAAA,+FAAkC;QAAA,4DAAW;QACxD,6HAA0H;QAC9H,4DAAiB;QAErB,4DAAM;QAGN,iEACA;QAAA,iEAEA;QAAA,wHAAgI;QAChI,8EAAgE;QAAzB,4IAAS,iBAAa,IAAC;QAAE,qEAAS;QAAA,4DAAS;QAClF,wHAAwG;QAE5G,4DAAO;;QA1FE,8EAAc;QAGK,0DAA4B;QAA5B,yFAA4B;QAC/C,0DAAe;QAAf,+EAAe;QACf,0DAAc;QAAd,8EAAc;QAIiD,0DAAuC;QAAvC,kGAAuC;QAEtF,0DAA+C;QAA/C,mHAA+C;QAOrB,0DAAyC;QAAzC,oGAAyC;QASpE,2DAAqD;QAArD,+KAAqD;QASd,0DAAwC;QAAxC,mGAAwC;QAC9E,0DAA8E;QAA9E,sJAA8E;QAgB3F,0DAA8C;QAA9C,yGAA8C;QACjC,0DAA6D;QAA7D,iIAA6D;QAC7D,0DAAuC;QAAvC,uGAAuC;QAoBpD,2DAA0C;QAA1C,qGAA0C;QAE7B,0DAAqD;QAArD,yHAAqD;QASZ,0DAAe;QAAf,+EAAe;QAEX,0DAAc;QAAd,8EAAc;;6FD/EvE,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;sCAEU,WAAW;kBAAnB,mDAAK;;;;;;;;;;;;;;AEVR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEe;AACT;AACA;AACO;AACyB;AACxB;AACW;AACb;AACI;AACF;AACD;AACQ;AACH;AACd;AACc;AACF;AACG;AACG;AACT;AACD;AACqB;AAC1E,2CAA2C;AACgB;AACF;AACO;AACX;AACA;AACI;AACG;AACG;;;AAmDxD,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YA3BJ;YACP,uEAAa;YACb,oEAAgB;YAChB,2DAAW;YACX,sEAAc;YACd,oEAAa;YACb,yEAAe;YACf,uEAAc;YACd,8EAAiB;YACjB,2EAAgB;YAChB,2EAAgB;YAChB,qEAAa;YACb,yEAAe;YACf,gFAAkB;YAClB,qEAAa;YACb,mEAAmB;YACnB,yEAAe;YACf,aAAa;YACb,4DAAY,CAAC,OAAO,CAAC;gBACnB,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,sEAAc,EAAE;gBAC5C,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,yEAAe,EAAE;gBAC9C,oDAAoD;gBACpD,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAG,4EAAgB,EAAC;aAE9C,CAAC;YACF,4FAAuB;SACxB;mIAIU,SAAS,mBA7ClB,2DAAY;QACZ,kEAAa;QACb,8EAAiB;QACjB,mEAAa;QACb,sEAAc;QACd,yEAAe;QACf,4EAAgB;QAChB,mEAAa;QACb,uFAAmB;QACnB,sEAAc;QACd,yEAAe;QACf,4EAAgB,aAKhB,uEAAa;QACb,oEAAgB;QAChB,2DAAW;QACX,sEAAc;QACd,oEAAa;QACb,yEAAe;QACf,uEAAc;QACd,8EAAiB;QACjB,2EAAgB;QAChB,2EAAgB;QAChB,qEAAa;QACb,yEAAe;QACf,gFAAkB;QAClB,qEAAa;QACb,mEAAmB;QACnB,yEAAe,gEASf,4FAAuB;6FAKd,SAAS;cA/CrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,kEAAa;oBACb,8EAAiB;oBACjB,mEAAa;oBACb,sEAAc;oBACd,yEAAe;oBACf,4EAAgB;oBAChB,mEAAa;oBACb,uFAAmB;oBACnB,sEAAc;oBACd,yEAAe;oBACf,4EAAgB;iBAEjB;gBACD,eAAe,EAAE,CAAC,yEAAe,CAAC;gBAClC,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,2DAAW;oBACX,sEAAc;oBACd,oEAAa;oBACb,yEAAe;oBACf,uEAAc;oBACd,8EAAiB;oBACjB,2EAAgB;oBAChB,2EAAgB;oBAChB,qEAAa;oBACb,yEAAe;oBACf,gFAAkB;oBAClB,qEAAa;oBACb,mEAAmB;oBACnB,yEAAe;oBACf,aAAa;oBACb,4DAAY,CAAC,OAAO,CAAC;wBACnB,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,sEAAc,EAAE;wBAC5C,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,yEAAe,EAAE;wBAC9C,oDAAoD;wBACpD,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAG,4EAAgB,EAAC;qBAE9C,CAAC;oBACF,4FAAuB;iBACxB;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AClFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACG;;;;;;;AAQtD,MAAM,eAAe;IAE1B,iCAAiC;IACjC,gIAAgI;IAChI,KAAK;IAEL,YAA4C,IAAS;QAAT,SAAI,GAAJ,IAAI,CAAK;IAAI,CAAC;IAI1D,QAAQ;IAER,CAAC;;8EAZU,eAAe,kEAMN,wEAAe;+FANxB,eAAe;QCT5B,sEACI;QAAA,wEAAsB;QAAA,uDAA8B;QAAA,4DAAK;QACzD,iFACI;QAAA,4EAAW;QAAA,uDAA8B;QAAA,4DAAY;QACrD,2EACJ;QADkC,0LAA2B;QAAzD,4DACJ;QAAA,4DAAiB;QACjB,qFACI;QAAA,4EAA8D;QAAA,iEAAM;QAAA,4DAAS;QAC7E,6EAAuE;QAAA,uEAAW;QAAA,4DAAS;QAC/F,4DAAqB;QACzB,4DAAM;;QAToB,0DAA8B;QAA9B,yGAA8B;QAErC,0DAA8B;QAA9B,wGAA8B;QACX,0DAA2B;QAA3B,sFAA2B;QAIrB,0DAAkC;QAAlC,+FAAkC;;6FDCjE,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;sBAOc,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;AEfrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AAC/B;AACyB;;;;;;;;ICA3C,yEACI;IAAA,4EACE;IADoF,qaAAsB;IAC1G,2EAAW;IAAA,iEAAM;IAAA,4DAAW;IAC9B,4DAAS;IACb,4DAAM;;;IAIyB,uEAA8B;IAAA,6DAAE;IAAA,4DAAO;;;IAT1E,mFACI;IAAA,oIAIM;IACN,uDAG+B;IAAA,sIAAuC;IAAA,uDAEtE;IAAA,oEACJ;IAAA,4DAAgB;;;;IAX2B,0DAAgB;IAAhB,mFAAgB;IAKvD,0DAG+B;IAH/B,mLAG+B;IAAO,0DAAqB;IAArB,sFAAqB;IAAW,0DAEtE;IAFsE,qGAEtE;IAAK,0DAAiC;IAAjC,mKAAiC;;;IAZ9C,8EACI;IAAA,wIAYgB;IACpB,4DAAW;;;IAbyC,0DAAc;IAAd,qFAAc;;ADQ3D,MAAM,aAAa;IAOxB;QAJU,qBAAgB,GAAG,IAAI,0DAAY,EAAE,CAAC;QAEhD,cAAS,GAAG,KAAK;QACjB,cAAS,GAAG,KAAK,CAAC;IACF,CAAC;IAEjB,QAAQ;QACN,IAAG,IAAI,CAAC,SAAS,CAAC,MAAM,GAAC,CAAC,EAAC;YACzB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;SACvB;IACH,CAAC;IAED,OAAO,CAAC,GAAG;QACT,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;IAClD,CAAC;IAED,kBAAkB,CAAC,MAAM;QACvB,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;QAClC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,IAAI;YACF,4CAAK,CAAC,MAAM,CAAC,oBAAoB,MAAM,EAAE,CAAC,CAAC,IAAI,CAC3C,CAAC,GAAG,EAAE,EAAE;gBACN,IAAG,GAAG,CAAC,MAAM,IAAI,GAAG,EAAC;oBACnB,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC;iBAC9B;YACH,CAAC,CACF,CAAC;SAEL;QAAC,OAAM,GAAG,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SACpB;IACH,CAAC;IAED,WAAW;QACT,IAAG,IAAI,CAAC,SAAS,CAAC,MAAM,GAAC,CAAC,EAAC;YACzB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;SACvB;QACD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC;IACpC,CAAC;;0EAzCU,aAAa;6FAAb,aAAa;QCT1B,mHAcW;;QAdY,+EAAe;;6FDSzB,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;sCAEU,SAAS;kBAAjB,mDAAK;YACG,WAAW;kBAAnB,mDAAK;YACI,gBAAgB;kBAAzB,oDAAM;;;;;;;;;;;;;;AEZT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAExB;;;;;;;;;;;ICad,8EAAiG;IAAlC,+WAA+B;IAAG,uDAAiB;IAAA,4DAAW;;;IAA5B,0DAAiB;IAAjB,2FAAiB;;;;IAEtH,mFAMA;IAFA,yVAAgC;IAEhC,4DAAe;;;IAJf,yFAAyB;;;IAP7B,sEACI;IAAA,qEAAI;IAAA,+DAAI;IAAA,4DAAK;IACb,mFACI;IAAA,yHAA6H;IACjI,4DAAgB;IAChB,iIAMe;IACnB,4DAAM;;;IATkD,0DAAa;IAAb,sFAAa;IAGhE,0DAAmB;IAAnB,sFAAmB;;;;IAOxB,gFAAiH;IAApF,oVAAiC;IAAmD,4DAAY;;;IAA9D,oFAAoB;;ADhBhF,MAAM,aAAa;IAcxB,YAAoB,MAAa;QAAb,WAAM,GAAN,MAAM,CAAO;QAbjC,mBAAc,GAAG,KAAK,CAAC;QACvB,eAAU,GAAG,EAAE,CAAC;QAChB,aAAQ,GAAG,EAAE,CAAC;QACd,kBAAa,GAAG,KAAK,CAAC;QACtB,cAAS,GAAG,KAAK,CAAC;QAClB,aAAQ,GAAG,IAAI,CAAC;QAChB,cAAS,GAAC,EAAE,CAAC;QAEb,SAAI,GAAG,EAAE,CAAC;QACV,cAAS,GAAG,EAAE,CAAC;QACf,gBAAW,GAAG,EAAE,CAAC;QACjB,qBAAgB,GAAG,CAAC,CAAC;IAEgB,CAAC;IAEtC,QAAQ;QACN,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,OAAO,CAAC,UAAU;QAChB,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QAC/B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;IAC5B,CAAC;IAED,aAAa;QACX,IAAI;YACF,4CAAK,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC,IAAI,CACpC,CAAC,GAAG,EAAE,EAAE;gBACN,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;gBAC/B,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;gBAC/B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC7B,CAAC,CACF,CAAC;SACL;QAAC,OAAM,GAAG,EAAE;YACX,IAAG,GAAG,CAAC,MAAM,KAAK,GAAG,EAAC;gBACpB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;aACjC;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAClB;IACH,CAAC;IAED,aAAa,CAAC,EAAE;QACd,IAAI;YACF,4CAAK,CAAC,GAAG,CAAC,iBAAiB,EAAE,EAAE,CAAC,CAAC,IAAI,CACjC,CAAC,GAAG,EAAE,EAAE;gBACN,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;oBACvC,IAAI,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;oBACjC,IAAI,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;oBACjC,IAAG,KAAK,GAAG,KAAK,EAAC;wBACf,OAAO,CAAC,CAAC,CAAC;qBACX;gBACH,CAAC,CAAC,CAAC;YACL,CAAC,CACF,CAAC;SACL;QAAC,OAAM,GAAG,EAAE;YACX,IAAG,GAAG,CAAC,MAAM,KAAK,GAAG,EAAC;gBACpB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;aACjC;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAClB;IACH,CAAC;IAED,WAAW,CAAC,IAAI;QACd,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC;QACpB,IAAI,CAAC,QAAQ,GAAC,KAAK,CAAC;IACtB,CAAC;IAED,UAAU,CAAC,MAAM;QACf,IAAI,CAAC,SAAS,GAAC,KAAK,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC;IAErB,CAAC;IAED,aAAa,CAAC,IAAI;QAChB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAC1B,CAAC;IAGD,WAAW,CAAC,KAAK;QACf,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,GAAE,CAAC,CAAC;IACnD,CAAC;;0EAlFU,aAAa;6FAAb,aAAa;QCR1B,4EAA8C;QAC9C,yEACI;QAAA,8EAMA;QAJA,qJAAa,uBAAmB,IAAC;QAIjC,4DAAW;QACf,4DAAM;QACN,yEACI;QAAA,yGAYM;QACN,qHAA6H;QACjI,4DAAM;;QAzBQ,8EAAiB;QAG3B,0DAAiB;QAAjB,8EAAiB;QAQX,0DAAc;QAAd,8EAAc;QAaR,0DAAe;QAAf,+EAAe;;6FDhBlB,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AAC/B;AACyB;;;;;;;;;ICD/C,sEACI;IAAA,qEAAI;IAAA,uDAAmB;IAAA,4DAAK;IAC5B,8EAAyF;IAAhC,+UAA+B;IAAC,4DAAW;IACxG,4DAAM;;;IAFE,0DAAmB;IAAnB,gGAAmB;IACZ,0DAAmB;IAAnB,mFAAmB;;;IAElC,sEACI;IAAA,qEAAI;IAAA,uDAAkB;IAAA,4DAAK;IAC3B,gFAAkE;IAEtE,4DAAM;;;IAHE,0DAAkB;IAAlB,+FAAkB;IACL,0DAA8B;IAA9B,8FAA8B;;;IAInD,yEAAoC;IAAA,sFAA0B;IAAA,4DAAM;;;;IAIhE,4EAAgH;IAAtE,wVAA8B;IAAwC,gEAAK;IAAA,4DAAS;;;IAFlI,sEACI;IAAA,uDACA;IAAA,2HAA8H;IAClI,4DAAM;;;IAFF,0DACA;IADA,uGACA;IAA8F,0DAAgB;IAAhB,mFAAgB;;;IAftH,sEACI;IAAA,+GAGM;IACN,+GAIM;IACN,gEACA;IAAA,+GAAoE;IACpE,gEACA;IAAA,+GAGM;IACV,4DAAM;;;IAhBI,0DAAY;IAAZ,+EAAY;IAIZ,0DAAW;IAAX,8EAAW;IAMX,0DAAe;IAAf,kFAAe;IAEf,0DAAgC;IAAhC,0GAAgC;;ADHnC,MAAM,aAAa;IAiBxB,YAAoB,MAAa;QAAb,WAAM,GAAN,MAAM,CAAO;QAZvB,cAAS,GAAG,IAAI,0DAAY,EAAU,CAAC;QAGjD,UAAK,GAAG,EAAE,CAAC;QACX,aAAQ,GAAG,EAAE,CAAC;QACd,UAAK,GAAG,EAAE,CAAC;QACX,WAAM,GAAG,EAAE,CAAC;QAEZ,UAAK,GAAG,CAAC,CAAC;QACV,mBAAc,GAAG,IAAI,CAAC;QACtB,cAAS,GAAG,KAAK,CAAC;IAEmB,CAAC;IAEtC,QAAQ;QACN,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,WAAW;QACT,IAAG,IAAI,CAAC,QAAQ,EAAC;YACf,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;YACxC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;YACnC,IAAG,CAAC,IAAI,CAAC,KAAK,EAAC;gBACb,IAAI,CAAC,aAAa,EAAE,CAAC;aACtB;SACF;QACD,IAAG,IAAI,CAAC,YAAY,EAAC;YACnB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SACxB;QACD,IAAG,IAAI,CAAC,cAAc,EAAC;YACrB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;SAC3C;QACD,IAAG,IAAI,CAAC,YAAY,EAAC;YACnB,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;IACH,CAAC;IAED,aAAa;QACX,IAAG,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,EAAC;YACzB,IAAI;gBACF,4CAAK,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,IAAI,CACjC,CAAC,GAAG,EAAE,EAAE;oBACN,IAAG,GAAG,CAAC,MAAM,IAAI,GAAG,EAAC;wBACnB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;wBACtB,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;wBACnC,IAAI,CAAC,cAAc,EAAE,CAAC;qBACvB;gBACH,CAAC,CACF,CAAC;aACL;YAAC,OAAM,GAAG,EAAE;gBACX,IAAG,GAAG,CAAC,MAAM,KAAK,GAAG,EAAC;oBACpB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;iBACjC;gBACC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;aAC3B;SACF;IAEH,CAAC;IAED,cAAc;QACZ,IAAI;YACF,4CAAK,CAAC,GAAG,CAAC,0BAA0B,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,IAAI,CACnD,CAAC,GAAG,EAAE,EAAE;gBACN,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;gBAC1B,IAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAC;oBACvB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBAC7B;YACH,CAAC,CACF,CAAC;SACL;QAAC,OAAM,GAAG,EAAE;YACX,IAAI,GAAG,CAAC,MAAM,KAAK,GAAG,EAAC;gBACrB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;aACjC;YACC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SACpB;IACH,CAAC;IAED,KAAK,CAAC,MAAM,EAAE,KAAK;QACjB,MAAM,IAAI,GAAG,EAAC,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAC,CAAC;QACvF,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACxB,CAAC;IAED,UAAU,CAAC,KAAK;QACd,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,KAAK,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;YAChC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;SAC/C;IACH,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;;0EAjGU,aAAa;6FAAb,aAAa;QCV1B,yGAiBM;;QAjBA,8EAAc;;6FDUP,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;sGAEU,QAAQ;kBAAhB,mDAAK;YACG,cAAc;kBAAtB,mDAAK;YACG,YAAY;kBAApB,mDAAK;YACG,YAAY;kBAApB,mDAAK;YACI,SAAS;kBAAlB,oDAAM;;;;;;;;;;;;;;AEfT;AAAA;AAAA;AAAA;AAAkD;;;AAO3C,MAAM,gBAAgB;IAE3B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;IAED,WAAW,CAAC,IAAI;QACd,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACpB,CAAC;;gFATU,gBAAgB;gGAAhB,gBAAgB;QCP7B,sEAAqB;;6FDOR,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAExB;AACwC;;;;;;;;;;;;;ICKlD,4EAAwE;IAAA,kGAAuC;IAAA,4DAAY;;;IAC3H,4EAAoD;IAAA,+EAAoB;IAAA,4DAAY;;;IACpF,4EAAmD;IAAA,uEAAY;IAAA,4DAAY;;;IAQ3E,4EAAsE;IAAA,kGAAuC;IAAA,4DAAY;;;IACzH,4EAAmD;IAAA,+EAAoB;IAAA,4DAAY;;;IACnF,4EAAkD;IAAA,uEAAY;IAAA,4DAAY;;;IAmB1E,4EAA2D;IAAA,wEAAa;IAAA,4DAAY;;;IASpF,4EAAgD;IAAA,mFAAwB;IAAA,4DAAY;;;IACpF,4EAAkD;IAAA,2GAAgD;IAAA,4DAAY;;;IAS9G,4EAA+C;IAAA,qFAA0B;IAAA,4DAAY;;;IACrF,4EAA6C;IAAA,oFAAyB;IAAA,4DAAY;;;IAelF,4EAAsE;IAAA,gGAAqC;IAAA,4DAAY;;;IACvH,4EAAmD;IAAA,kFAAuB;IAAA,4DAAY;;;IACtF,4EAAkD;IAAA,sFAA2B;IAAA,4DAAY;;ADlElG,MAAM,eAAe;IA+B1B,oFAAoF;IACpF,kFAAkF;IAClF,8EAA8E;IAC9E,gFAAgF;IAChF,wEAAwE;IACxE,kFAAkF;IAElF,YAAoB,MAAa;QAAb,WAAM,GAAN,MAAM,CAAO;QArCjC,SAAI,GAAG;YACL,SAAS,EAAE,EAAE;YACb,QAAQ,EAAE,EAAE;YACZ,IAAI,EAAE,EAAE;YACR,MAAM,EAAE,EAAE;YACV,KAAK,EAAE,EAAE;YACT,QAAQ,EAAE,EAAE;SACb;QAED,SAAI,GAAG,IAAI,CAAC;QAEZ,0BAA0B;QAE1B,eAAU,GAAG,IAAI,wDAAS,CAAC;YACzB,SAAS,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;YACjH,QAAQ,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;YAChH,IAAI,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/C,MAAM,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5E,KAAK,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YACpE,QAAQ,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,OAAO,CAAC,2CAA2C,CAAC,CAAC,CAAC;YACnJ,oEAAoE;SACjE,CAAC;QAiBA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACtB,CAAC;IAhBF,IAAI,SAAS,KAAG,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,WAAW,CAAC,GAAC;IACxD,IAAI,QAAQ,KAAG,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,GAAC;IACtD,IAAI,IAAI,KAAG,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,GAAC;IAC9C,IAAI,MAAM,KAAG,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAC;IAClD,IAAI,KAAK,KAAG,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,GAAC;IAChD,IAAI,QAAQ,KAAG,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,GAAC;IAYtD,kCAAkC;IAElC,QAAQ;QACN,oCAAoC;QACpC,qFAAqF;QACrF,oFAAoF;QACpF,gFAAgF;QAChF,kFAAkF;QAClF,0EAA0E;QAC1E,mFAAmF;QACnF,KAAK;IACP,CAAC;IAED,sBAAsB;IACtB,iFAAiF;IACjF,iFAAiF;IACjF,0EAA0E;IAC1E,uCAAuC;IACvC,MAAM;IACN,oEAAoE;IACpE,IAAI;IAEJ,eAAe;QACb,MAAM,EAAC,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAC,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;QACnF,IAAI,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,QAAQ,CAAC,QAAQ,CAAC,UAAU,CAAC;YAC/D,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,QAAQ,CAAC,QAAQ,CAAC,UAAU,CAAC;YAC/D,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;YACxD,OAAO,6BAA6B,CAAC;SACtC;QACD,OAAO,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE,CAAC;IAC5D,CAAC;IAED,sCAAsC;IACtC,8BAA8B;IAC9B,IAAI;IAEJ,YAAY;QACV,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IAClC,CAAC;IAED,aAAa;QACX,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACnC,6BAA6B;QAE7B,MAAM,EAAC,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAC,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;QACnF,IAAG,SAAS,CAAC,MAAM,GAAG,CAAC;YACrB,QAAQ,CAAC,MAAM,GAAG,CAAC;YACnB,IAAI,CAAC,MAAM,GAAG,CAAC;YACf,MAAM,CAAC,MAAM,GAAG,CAAC;YACjB,KAAK,CAAC,MAAM,GAAG,CAAC;YAChB,QAAQ,CAAC,MAAM,GAAE,CAAC,EAAC;YACjB,KAAK,CAAC,qCAAqC,CAAC,CAAC;SAChD;aACG;YACF,IAAI,CAAC,MAAM,EAAE,CAAC;SACf;IACH,CAAC;IAED,MAAM;QACJ,IAAI;YACF,4CAAK,CAAC,IAAI,CAAC,kBAAkB,EAAE;gBAC7B,kBAAkB;gBAClB,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK;aAC5B,CAAC,CAAC,IAAI,CACH,CAAC,GAAG,EAAE,EAAE;gBACN,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YAClC,CAAC,CACF,CAAC;SACL;QAAC,OAAM,GAAG,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SACpB;IACH,CAAC;;8EAlHU,eAAe;+FAAf,eAAe;QCV5B,yEAA2B;QAC3B,yEACI;QAAA,qEAAI;QAAA,uEAAY;QAAA,4DAAK;QACrB,0EACI;QADE,2IAAY,mBAAe,IAAC;QAC9B,sEACI;QAAA,oFACI;QAAA,4EAAW;QAAA,qEAAU;QAAA,4DAAY;QACjC,sEACA;QAAA,yHAA2H;QAC3H,yHAAoF;QACpF,yHAA2E;QAC/E,4DAAiB;QACrB,4DAAM;QACN,iEACA;QAAA,uEACI;QAAA,qFACI;QAAA,6EAAW;QAAA,qEAAS;QAAA,4DAAY;QAChC,uEACA;QAAA,yHAAyH;QACzH,yHAAmF;QACnF,yHAA0E;QAC9E,4DAAiB;QACrB,4DAAM;QACN,iEACA;QAAA,uEACI;QAAA,qFACI;QAAA,6EAAW;QAAA,gEAAI;QAAA,4DAAY;QAC3B,iFACE;QADiC,wLAAqB;QACtD,iFAA6B;QAAA,oEAAQ;QAAA,4DAAa;QAClD,iFAA8B;QAAA,qEAAS;QAAA,4DAAa;QACpD,iFAA8B;QAAA,qEAAS;QAAA,4DAAa;QACpD,kFAA0B;QAAA,iEAAK;QAAA,4DAAa;QAC5C,kFAAkC;QAAA,yEAAa;QAAA,4DAAa;QAC5D,kFAAgC;QAAA,uEAAW;QAAA,4DAAa;QACxD,kFAA2B;QAAA,kEAAM;QAAA,4DAAa;QAC9C,kFAA4B;QAAA,mEAAO;QAAA,4DAAa;QAChD,kFAA+B;QAAA,sEAAU;QAAA,4DAAa;QACtD,kFAA8B;QAAA,qEAAS;QAAA,4DAAa;QACtD,4DAAa;QACb,yHAAoF;QACxF,4DAAiB;QACrB,4DAAM;QAEN,uEACI;QAAA,qFACI;QAAA,6EAAW;QAAA,kEAAM;QAAA,4DAAY;QAC7B,wEACA;QACA,yHAAoF;QACpF,yHAA8G;QAClH,4DAAiB;QACrB,4DAAM;QAEN,uEACI;QAAA,qFACI;QAAA,6EAAW;QAAA,iEAAK;QAAA,4DAAY;QAC5B,wEACA;QACA,yHAAqF;QACrF,yHAAkF;QACtF,4DAAiB;QACrB,4DAAM;QAEN,uEACI;QAAA,qFACI;QAAA,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,wEACA;QAAA,8EAEI;QAF8B,gKAAsB;QAEpD,4EAAU;QAAA,wDAA2C;QAAA,4DAAW;QACpE,4DAAS;QACT,4EAAW;QAAA,4GAA+C;QAAA,4DAAW;QAGrE,yHAAuH;QACvH,yHAAsF;QACtF,yHAAyF;QAC7F,4DAAiB;QACrB,4DAAM;QAEN,iEACA;QAAA,iEAEA;QAAA,8EAA0E;QAAA,kEAAM;QAAA,4DAAS;QAE7F,4DAAO;QAkDP,iEACA;QAEA,8EAAgE;QAAzB,wIAAS,kBAAc,IAAC;QAAC,yEAAa;QAAA,4DAAS;QAC1F,4DAAM;;QAxImD,0DAAwB;QAAxB,qFAAwB;QAKpD,0DAAyD;QAAzD,6HAAyD;QACzD,0DAAqC;QAArC,qGAAqC;QACrC,0DAAmC;QAAnC,mGAAmC;QAQnC,0DAAuD;QAAvD,2HAAuD;QACvD,0DAAoC;QAApC,oGAAoC;QACpC,0DAAkC;QAAlC,kGAAkC;QAOZ,0DAAqB;QAArB,gFAAqB;QAY5C,2DAA6C;QAA7C,+JAA6C;QAS5C,0DAAiC;QAAjC,iGAAiC;QACjC,0DAAkC;QAAlC,kGAAkC;QASlC,0DAAgC;QAAhC,gGAAgC;QAChC,0DAA6B;QAA7B,6FAA6B;QAOU,0DAAkC;QAAlC,gGAAkC;QAElF,0DAAmC;QAAnC,wFAAmC;QACzB,0DAA2C;QAA3C,2GAA2C;QAK5C,0DAAuD;QAAvD,2HAAuD;QACvD,0DAAoC;QAApC,oGAAoC;QACpC,0DAAkC;QAAlC,kGAAkC;QAOb,0DAA+B;QAA/B,4FAA+B;;6FDzEpE,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AACN;AACzB;AACA;AAC1B,kCAAkC;AACiC;;;;;;;;;ICH/D,4EAAqG;IAA3D,oTAAoB;IAAuC,0EAAe;IAAA,4DAAS;;;;IAGjI,yEACI;IAAA,8EACA;IAAA,0EACI;IAAA,sEAEI;IAAA,oFACI;IAAA,4EAAW;IAAA,+DAAI;IAAA,4DAAY;IAC3B,2EACA;IAD4D,+TAA6B,MAAM,KAAE;IAAjG,4DACA;IAAA,2EAAY;IAAA,yGAA6C;IAAA,4DAAW;IACxE,4DAAiB;IAErB,4DAAM;IAEN,uEACI;IAAA,qFACI;IAAA,6EAAW;IAAA,kEAAM;IAAA,4DAAY;IAC7B,4EACA;IAD8D,gUAA6B,QAAQ,KAAE;IAArG,4DACA;IAAA,4EAAY;IAAA,4GAA+C;IAAA,4DAAW;IAC1E,4DAAiB;IAErB,4DAAM;IAGN,uEACI;IAAA,qFACI;IAAA,6EAAW;IAAA,yEAAa;IAAA,4DAAY;IACpC,4EACJ;IADwE,8TAA2B,cAAc,KAAE;IAA/G,4DACJ;IAAA,4DAAiB;IAErB,4DAAM;IAGN,uEACI;IAAA,+EACA;IAAA,iEACA;IAAA,qFACI;IAAA,6EAAW;IAAA,uEAAW;IAAA,4DAAY;IAClC,wEACA;IAAA,4EAAW;IAAA,+EAAmB;IAAA,4DAAW;IAC7C,4DAAiB;IACrB,4DAAM;IAEN,iEACA;IAAA,8EAAgG;IAAtD,sTAAsB;IAAgC,iEAAK;IAAA,4DAAS;IAElH,4DAAO;IAEX,4DAAM;;;IA7CqB,0DAAuB;IAAvB,uFAAuB;IAKgE,0DAAkC;IAAlC,gGAAkC;IAS9B,0DAAoC;IAApC,kGAAoC;IA2BjF,2DAA8B;IAA9B,8FAA8B;;;;IAQvG,sEACI;IAAA,yEAAsB;IAAA,uFAA4B;IAAA,4DAAK;IACvD,6EAAiE;IAAvB,qTAAqB;IAAE,yFAA8B;IAAA,4DAAS;IACxG,gEACA;IAAA,6EAAqE;IAA3B,yTAAyB;IAAE,0EAAe;IAAA,4DAAS;IACjG,4DAAM;;ADhDC,MAAM,cAAc;IAqCzB;QAlCU,eAAU,GAAG,IAAI,0DAAY,EAAE,CAAC;QAE1C,UAAK,GAAG;YACN,IAAI,EAAE,EAAE;YACR,MAAM,EAAE,EAAE;YACV,YAAY,EAAE,EAAE;YAChB,UAAU,EAAE,EAAE;SACf;QAED,cAAS,GAAG,IAAI,wDAAS,CAAC;YACxB,IAAI,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1E,MAAM,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5E,YAAY,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAClF,UAAU,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAG,yDAAU,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;SAC5I,CAAC;QAQF,8EAA8E;QAC9E,gFAAgF;QAChF,sFAAsF;QACtF,+GAA+G;QAE/G,QAAG,GAAG,KAAK,CAAC;QAEZ,iBAAY,GAAG,KAAK,CAAC;QACrB,qBAAgB,GAAG,KAAK,CAAC;QAEzB,aAAQ,GAAG,KAAK,CAAC;IAED,CAAC;IAlBjB,IAAI,IAAI,KAAG,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,GAAC;IAC7C,IAAI,MAAM,KAAG,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAC;IACjD,IAAI,YAAY,KAAG,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,GAAC;IAC7D,IAAI,UAAU,KAAG,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,GAAC;IAiBzD,QAAQ;IAER,CAAC;IAED,eAAe;QACb,MAAM,EAAC,IAAI,EAAE,MAAM,EAAE,YAAY,EAAE,UAAU,EAAC,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;QACtE,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC;YAC5D,YAAY,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,UAAU,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;YACpE,OAAO,wBAAwB,CAAC;SACjC;QACD,OAAO,UAAU,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,EAAE,CAAC;IAC3E,CAAC;IAED,sBAAsB;IACtB,8EAA8E;IAC9E,sFAAsF;IACtF,uCAAuC;IACvC,MAAM;IACN,mFAAmF;IACnF,IAAI;IAEJ,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAC1C,CAAC;IAED,QAAQ,CAAC,EAAC,MAAM,EAAE,EAAC,KAAK,EAAC,EAAC,EAAE,KAAK;QAC/B,6BAA6B;QAC7B,IAAG,KAAK,IAAI,cAAc,EAAC;YACzB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;SAC7B;IACH,CAAC;IAED,QAAQ,CAAC,EAAC,MAAM,EAAE,EAAC,KAAK,EAAC,EAAC,EAAE,KAAK;QAC/B,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;QAErC,+CAA+C;QAC/C,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QACtD,4BAA4B;QAC5B,oCAAoC;QACpC,KAAK;QACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAEpC,CAAC;IAED,sCAAsC;IACtC,iDAAiD;IAEjD,IAAI;IAEJ,eAAe,CAAC,IAAI;QAClB,IAAI;YACF,4CAAK,CAAC,GAAG,CAAC,wBAAwB,IAAI,EAAE,CAAC,CAAC,IAAI,CAC1C,CAAC,GAAG,EAAE,EAAE;gBACN,IAAG,GAAG,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,EAAC;oBACtB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;oBAC7B,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,EAAE,CAAC;oBAC7B,KAAK,CAAC,IAAI,IAAI,4CAA4C,CAAC,CAAC;iBAC7D;qBACG;oBACF,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;iBAC/B;YACH,CAAC,CACF,CAAC;SACL;QAAC,OAAM,GAAG,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SACpB;IACH,CAAC;IAGD,UAAU;QACR,MAAM,EAAC,IAAI,EAAE,MAAM,EAAE,YAAY,EAAE,UAAU,EAAC,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;QACtE,IAAG,IAAI,CAAC,MAAM,GAAE,CAAC;YACf,MAAM,CAAC,MAAM,GAAE,CAAC;YAChB,YAAY,CAAC,MAAM,GAAG,CAAC;YACvB,UAAU,CAAC,MAAM,IAAI,EAAE;YACvB,IAAI,CAAC,gBAAgB,EAAC;YACtB,KAAK,CAAC,oBAAoB,CAAC,CAAC;SAC7B;aACG;YACF,IAAI,CAAC,SAAS,EAAE,CAAC;SAClB;IACH,CAAC;IAED,gBAAgB;IAChB,qCAAqC;IACrC,sCAAsC;IACtC,6CAA6C;IAC7C,6CAA6C;IAC7C,8BAA8B;IAC9B,mCAAmC;IACnC,MAAM;IACN,UAAU;IACV,wBAAwB;IACxB,MAAM;IACN,IAAI;IAIJ,SAAS;QACP,MAAM,EAAC,IAAI,EAAE,MAAM,EAAE,YAAY,EAAE,UAAU,EAAC,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;QACtE,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,GAAG,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC;QAC1C,GAAG,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC;QACxC,GAAG,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;QACzC,GAAG,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC;QAC5B,GAAG,CAAC,iBAAiB,CAAC,GAAG,MAAM,CAAC;QAChC,GAAG,CAAC,eAAe,CAAC,GAAG,YAAY,CAAC;QACpC,GAAG,CAAC,eAAe,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,EAAE,EAAC,EAAE,CAAC,CAAC;QAC/C,IAAI;YACF,4CAAK,CAAC,IAAI,CAAC,qBAAqB,EAAC;gBAC/B,GAAG;aACJ,CAAC,CAAC,IAAI,CACH,CAAC,GAAG,EAAE,EAAE;gBACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,IAAI,CAAC,GAAG,GAAG,IAAI;YACjB,CAAC,CACF,CAAC;SACL;QAAC,OAAM,GAAG,EAAE;YACX,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAClB;IACH,CAAC;IAGD,eAAe;IACf,kBAAkB;IAClB,+CAA+C;IAC/C,6CAA6C;IAC7C,8CAA8C;IAC9C,4CAA4C;IAC5C,gDAAgD;IAChD,oDAAoD;IACpD,+DAA+D;IAC/D,UAAU;IACV,yCAAyC;IACzC,YAAY;IACZ,eAAe;IACf,qBAAqB;IACrB,kCAAkC;IAClC,4BAA4B;IAC5B,YAAY;IACZ,WAAW;IACX,mBAAmB;IACnB,wBAAwB;IACxB,MAAM;IACN,IAAI;IAEJ,aAAa;QACX,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,aAAa;QACX,IAAI;YACF,4CAAK,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,IAAI,CACjC,CAAC,GAAG,EAAE,EAAE;gBACN,IAAI,CAAC,QAAQ,EAAE,CAAC;YAClB,CAAC,CACF,CAAC;SACL;QAAC,OAAM,GAAG,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SACpB;IACH,CAAC;IAED,SAAS;QACP,MAAM,EAAC,IAAI,EAAE,MAAM,EAAE,YAAY,EAAE,UAAU,EAAC,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;QACtE,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAC,GAAG,IAAI,CAAC,cAAc,CAAC;QACzD,MAAM,GAAG,GAAG,IAAI,6CAAK,EAAE,CAAC;QACxB,GAAG,CAAC,IAAI,CAAC,8BAA8B,EAAG,EAAE,EAAE,EAAE,CAAC,CAAC;QAClD,GAAG,CAAC,IAAI,CAAC,gBAAgB,IAAI,GAAG,EAAG,EAAE,EAAE,EAAE,CAAC,CAAC;QAC3C,GAAG,CAAC,IAAI,CAAC,kBAAkB,YAAY,GAAG,EAAG,EAAE,EAAE,EAAE,CAAC,CAAC;QACrD,mEAAmE;QACnE,GAAG,CAAC,IAAI,CAAC,iBAAiB,EAAG,EAAE,EAAE,EAAE,CAAC,CAAC;QACrC,IAAI,KAAK,GAAG,EAAE,CAAC;QACf,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;YACtC,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC;YAClB,GAAG,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,MAAM,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,EAAG,EAAE,EAAE,KAAK,CAAC,CAAC;SAC7G;QACD,GAAG,CAAC,IAAI,CAAC,2BAA2B,KAAK,GAAG,EAAG,EAAE,EAAE,KAAK,GAAC,EAAE,CAAC,CAAC;QAC7D,GAAG,CAAC,IAAI,CAAC,mCAAmC,EAAG,EAAE,EAAE,KAAK,GAAC,EAAE,CAAC,CAAC;QAC7D,GAAG,CAAC,IAAI,CAAC,iCAAiC,EAAG,EAAE,EAAE,KAAK,GAAC,EAAE,CAAC,CAAC;QAC3D,GAAG,CAAC,IAAI,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC;QAC9B,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;;4EA9NU,cAAc;8FAAd,cAAc;QCb3B,qEAAI;QAAA,gEAAK;QAAA,4DAAK;QACd,sEACI;QAAA,gHAA6H;QACjI,4DAAM;QAEN,2GA+CM;QAIN,0GAKM;;QA3DkF,0DAAe;QAAf,+EAAe;QAG7E,0DAAU;QAAV,0EAAU;QAmD9B,0DAAS;QAAT,yEAAS;;6FD3CF,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;sCAEU,WAAW;kBAAnB,mDAAK;YACG,cAAc;kBAAtB,mDAAK;YACI,UAAU;kBAAnB,oDAAM;;;;;;;;;;;;;;AEhBT;AAAA;AAAA;AAAA;AAAyC;AACc;;;AAEvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAExB;AACyB;AACe;;;;;;;;;;;ICQlD,4EAAmD;IAAA,qFAA0B;IAAA,4DAAY;;;IACzF,4EAAiD;IAAA,oFAAyB;IAAA,4DAAY;;;IAgBtF,4EAAsE;IAAA,gGAAqC;IAAA,4DAAY;;;IACvH,4EAAmD;IAAA,kFAAuB;IAAA,4DAAY;;;IACtF,4EAAkD;IAAA,sFAA2B;IAAA,4DAAY;;;IAyC7F,uEAA2B;IAAA,mEAAQ;IAAA,4DAAO;;;IAI1C,yEAAqC;IAAA,uDAA8C;IAAA,4DAAK;;;IAAnD,0DAA8C;IAA9C,6HAA8C;;;IACnF,yEAAsC;IAAA,uDAAuC;IAAA,4DAAK;;;IAA5C,0DAAuC;IAAvC,sHAAuC;;;IAFjF,sEACI;IAAA,sHAAwF;IACxF,sHAAkF;IACtF,4DAAM;;;IAFkB,0DAAc;IAAd,iFAAc;IACd,0DAAe;IAAf,kFAAe;;;IAEvC,sEACI;IAAA,yEAAqB;IAAA,wFAA4B;IAAA,4DAAK;IAC1D,4DAAM;;;;IACN,6EAAiG;IAApB,8TAAmB;IAAC,yEAAc;IAAA,4DAAS;;;;IACxH,6EAA+E;IAApB,8TAAmB;IAAC,4EAAiB;IAAA,4DAAS;;;IAb7G,0EACI;IAAA,yEAAoB;IAAA,oEAChB;IAAA,mHAA0C;IAC1C,uDACJ;IAAA,4DAAK;IACL,iHAGM;IACN,iHAEM;IACN,wHAAwH;IACxH,wHAAyG;IAC7G,4DAAM;;;IAZS,0DAAkB;IAAlB,qFAAkB;IACzB,0DACJ;IADI,iGACJ;IACM,0DAAc;IAAd,iFAAc;IAId,0DAAa;IAAb,gFAAa;IAGV,0DAAgC;IAAhC,0GAAgC;IAChC,0DAAc;IAAd,iFAAc;;ADvExB,MAAM,cAAc;IA+BzB,YAAoB,MAAa;QAAb,WAAM,GAAN,MAAM,CAAO;QA9BvB,aAAQ,GAAG,IAAI,0DAAY,EAAE,CAAC;QAExC,SAAI,GAAG,IAAI,CAAC;QAEZ,kBAAkB;QAClB,wEAAwE;QACxE,iBAAiB;QAEjB,SAAI,GAAG,EAAE,CAAC;QACV,iBAAY,GAAG,KAAK,CAAC;QACrB,kBAAa,GAAG,IAAI,CAAC;QACrB,gBAAW,GAAG,IAAI,CAAC;QAEnB,aAAQ,GAAG,KAAK,CAAC;QACjB,cAAS,GAAG,KAAK,CAAC;QAClB,YAAO,GAAG,KAAK,CAAC;QAEhB,YAAO,GAAG,EAAE,CAAC;QACb,mBAAc,GAAE,EAAE,CAAC;QACnB,cAAS,GAAG,EAAE,CAAC;QAEf,cAAS,GAAG,IAAI,wDAAS,CAAC;YACxB,SAAS,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YACxE,QAAQ,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,OAAO,CAAC,2CAA2C,CAAC,CAAC,CAAC;SAChJ,CAAC;QAOA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACtB,CAAC;IALF,IAAI,SAAS,KAAG,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,GAAC;IACvD,IAAI,QAAQ,KAAG,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,GAAC;IAMrD,QAAQ;QACN,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,sBAAsB;IACtB,2CAA2C;IAC3C,uCAAuC;IACvC,MAAM;IACN,oEAAoE;IACpE,IAAI;IAEJ,+BAA+B;IAC/B,4BAA4B;IAC5B,IAAI;IAEJ,mCAAmC;IACnC,2BAA2B;IAC3B,IAAI;IAEJ,aAAa;QACX,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACnC,CAAC;IAED,YAAY;QACV,+BAA+B;QAC/B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAClC,MAAM,EAAC,SAAS,EAAE,QAAQ,EAAC,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;QACnD,IACE,SAAS,CAAC,MAAM,GAAG,CAAC;YACpB,QAAQ,CAAC,MAAM,GAAE,CAAC,EAAC;YACjB,KAAK,CAAC,qCAAqC,CAAC,CAAC;SAChD;aACG;YACH,IAAI,CAAC,KAAK,EAAE,CAAC;YACd,wBAAwB;YACxB,uBAAuB;SACtB;IACH,CAAC;IAGD,OAAO;QACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;QACzB,IAAG,IAAI,CAAC,OAAO,EAAC;YACd,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;QACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC3C,IAAG,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAC;YAClC,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;aACG;YACF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;SAChC;IACH,CAAC;IAGD,KAAK;QACH,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACzB,IAAI;YACF,4CAAK,CAAC,IAAI,CAAC,iBAAiB,EAAE;gBAC5B,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ;aAAC,CAAC,CAAC,IAAI,CACtF,CAAC,GAAG,EAAE,EAAE;gBACN,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;gBACrB,IAAG,GAAG,CAAC,IAAI,EAAC;oBACV,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;oBACzB,IAAG,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAC;wBACnB,IAAI,CAAC,aAAa,EAAE,CAAC;qBACtB;yBACG;wBACF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;qBAChC;iBACF;gBACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAChC,CAAC,CACF,CAAC;SACL;QAAC,OAAM,GAAG,EAAE;YACT,KAAK,CAAC,iCAAiC,CAAC,CAAC;YACzC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SACpB;IACH,CAAC;IAED,aAAa;QACX,IAAI;YACF,4CAAK,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAChC,CAAC,GAAG,EAAE,EAAE;gBACN,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;gBAC3C,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;YACzC,CAAC,CACF,CAAC;SACL;QAAC,OAAM,GAAG,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SACpB;IACH,CAAC;IAED,aAAa;QACX,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;QAElC,IAAI;YACF,4CAAK,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,IAAI,CACjC,CAAC,GAAG,EAAE,EAAE;gBACN,IAAG,GAAG,CAAC,MAAM,IAAI,GAAG,EAAC;oBACnB,MAAM,EAAC,IAAI,EAAE,SAAS,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;oBACpC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;oBACnC,IAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAC;wBACjB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;wBACzB,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;wBACvB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;wBACrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;wBAC3B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC;qBACtD;oBACD,2BAA2B;oBAC3B,IAAG,SAAS,IAAI,SAAS,CAAC,GAAG,EAAC;wBAC5B,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;wBAC9B,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;wBAC3B,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;wBACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;wBACtB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC;qBACnD;oBACD,IAAG,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,SAAS,CAAC,MAAM,IAAI,CAAC,EAAC;wBAC3C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,SAAS,IAAI,CAAC,CAAC,CAAC;wBAChD,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;wBAC9B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;qBACrB;iBACF;YACH,CAAC,CACF,CAAC;SACL;QAAC,OAAM,GAAG,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SACpB;IACH,CAAC;IAED,aAAa;QACX,IAAI;YACF,4CAAK,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,IAAI,CACjC,CAAC,GAAG,EAAE,EAAE;gBACN,IAAG,GAAG,EAAC;oBACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;iBAChC;YACH,CAAC,CACF,CAAC;SACL;QAAC,OAAM,GAAG,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,IAAI,GAAG,CAAC,MAAM,KAAK,GAAG,EAAC;gBACrB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;aACjC;SACJ;IACH,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAC5B,CAAC;;4EAxLU,cAAc;8FAAd,cAAc;QCZ3B,iFAAgE;QAAhC,qJAAc,oBAAgB,IAAC;QAAC,4DAAc;QAE9E,yEACI;QAAA,qEAAI;QAAA,qEAAU;QAAA,4DAAK;QACnB,0EAEI;QAFE,0IAAY,kBAAc,IAAC;QAE7B,sEACI;QAAA,oFACI;QAAA,4EAAW;QAAA,gEAAK;QAAA,4DAAY;QAC5B,sEACA;QAEA,wHAAyF;QACzF,wHAAsF;QAC1F,4DAAiB;QACrB,4DAAM;QAEN,uEACI;QAAA,qFACI;QAAA,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,uEACA;QAAA,6EAEI;QAF8B,+JAAsB;QAEpD,4EAAU;QAAA,wDAA2C;QAAA,4DAAW;QACpE,4DAAS;QACT,4EAAW;QAAA,4GAA+C;QAAA,4DAAW;QAIrE,wHAAuH;QACvH,wHAAsF;QACtF,wHAAyF;QAC7F,4DAAiB;QACrB,4DAAM;QAEN,iEACA;QAAA,iEAEA;QAAA,6EAAyE;QAAA,iEAAK;QAAA,4DAAS;QAE3F,4DAAO;QAcP,iEACA;QAAA,6EAAiE;QAA1B,uIAAS,mBAAe,IAAC;QAAC,2EAAe;QAAA,4DAAS;QAC7F,4DAAM;QAEN,0EACI;QACA,sEACA;QAAA,0EAA0B;QAAA,2GAA8C;QAAA,4DAAK;QAC7E,0EAA2B;QAAA,sFAAyB;QAAA,4DAAK;QACzD,0EAA0B;QAAA,qGAAwC;QAAA,4DAAK;QACvE,0EAA2B;QAAA,8GAAiD;QAAA,4DAAK;QACrF,4DAAM;QAEN,0EACI;QAAA,sEAAI;QAAA,wDAAmD;QAAA,4DAAK;QAC5D,sEAAI;QAAA,wDAAwD;QAAA,4DAAK;QACjE,6GAcM;QACV,4DAAM;;QArFQ,8EAAiB;QAIwB,0DAAuB;QAAvB,oFAAuB;QAQjD,0DAAoC;QAApC,oGAAoC;QACpC,0DAAiC;QAAjC,iGAAiC;QAOM,0DAAkC;QAAlC,gGAAkC;QAElF,0DAAmC;QAAnC,wFAAmC;QACzB,0DAA2C;QAA3C,2GAA2C;QAM5C,0DAAuD;QAAvD,2HAAuD;QACvD,0DAAoC;QAApC,oGAAoC;QACpC,0DAAkC;QAAlC,kGAAkC;QAOb,0DAA8B;QAA9B,2FAA8B;QA8BxE,2DAAmD;QAAnD,6HAAmD;QACnD,0DAAwD;QAAxD,kIAAwD;QACvC,0DAAkB;QAAlB,kFAAkB;;6FD1D9B,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;sGAEW,QAAQ;kBAAjB,oDAAM;;;;;;;;;;;;;;AEbT;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAGzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;;ACZpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AAC/B;AAEmC;AACV;;;;;;;;;ICQ/B,4EAA8E;IAApC,8ZAAiB;IAAmB,uEAAY;IAAA,4DAAS;;;;IACnG,4EAAuF;IAA7C,qaAAyB;IAAoB,sEAAW;IAAA,4DAAS;;;IAZ3H,mFACI;IAAA,8EACI;IAAA,qFACI;IAAA,iFAAiB;IAAA,uDAAiB;IAAA,4DAAiB;IACnD,iFAAiB;IAAA,uDAA+C;IAAA,4DAAiB;IACrF,4DAAkB;IAClB,sFACI;IAAA,oEACJ;IAAA,4DAAmB;IACnB,kFACI;IAAA,oFACI;IAAA,qIAAmG;IACnG,qIAA2G;IAC/G,4DAAmB;IACvB,4DAAkB;IACtB,4DAAW;IACf,4DAAgB;;;;IAba,0DAAiB;IAAjB,0FAAiB;IACjB,0DAA+C;IAA/C,6HAA+C;IAG5C,0DAAyB;IAAzB,2JAAyB;IAIoB,0DAAe;IAAf,kFAAe;IACP,0DAAgB;IAAhB,mFAAgB;;ADFlG,MAAM,iBAAiB;IAQ5B,YAAmB,MAAiB;QAAjB,WAAM,GAAN,MAAM,CAAW;QAL1B,WAAM,GAAG,IAAI,0DAAY,EAAE,CAAC;QAC5B,eAAU,GAAG,IAAI,0DAAY,EAAE,CAAC;QAE1C,kBAAa,GAAG,EAAE,CAAC;QACnB,cAAS,GAAG,EAAE,CAAC;IAEf,CAAC;IAED,QAAQ;QACH,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC;IACpC,CAAC;IAED,WAAW,CAAC,EAAE,EAAE,KAAK,EAAE,GAAG;QACtB,IAAG,EAAE,IAAI,GAAG,EAAE;YACd,IAAI;gBACF,4CAAK,CAAC,IAAI,CAAC,mBAAmB,EAAE;oBAC9B,UAAU,EAAE,EAAE;oBACd,QAAQ,EAAE,GAAG;oBACb,UAAU,EAAE,KAAK,GAAC,GAAG;iBACpB,CAAC,CAAC,IAAI,CACL,CAAC,GAAG,EAAE,EAAE;oBACN,IAAG,GAAG,CAAC,MAAM,IAAI,GAAG,EAAC;wBACnB,IAAI,CAAC,YAAY,EAAE,CAAC;qBACrB;gBACH,CAAC,CACF,CAAC;aACL;YAAC,OAAM,GAAG,EAAE;gBACT,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aACpB;SACF;aACG;YACF,KAAK,CAAC,qBAAqB,CAAC,CAAC;SAC9B;IACH,CAAC;IAED,UAAU,CAAC,GAAG;QACZ,MAAM,EAAC,WAAW,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAC,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;QAC/D,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,wEAAe,EAAE,EAAC,IAAI,EAAE,EAAC,MAAM,EAAE,WAAW,EAAE,IAAI,EAAC,EAAC,CAAC,CAAC;QACvF,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACzC,IAAG,MAAM,IAAI,QAAQ,EAAC;gBACpB,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;aACtC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,IAAI,CAAC,GAAG;QACN,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;QACxC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAC/B,CAAC;IAED,YAAY;QACV,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;;kFAvDU,iBAAiB;iGAAjB,iBAAiB;QCX9B,mFACI;QAAA,kIAgBgB;QACpB,4DAAgB;;QAjBmC,0DAAiB;QAAjB,qFAAiB;;6FDUvD,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;kHAEU,YAAY;kBAApB,mDAAK;YACG,QAAQ;kBAAhB,mDAAK;YACI,MAAM;kBAAf,oDAAM;YACG,UAAU;kBAAnB,oDAAM;;;;;;;;;;;;;AEfT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\nimport {Router, ActivatedRoute} from '@angular/router';\nimport axios from 'axios';\nimport {Output, EventEmitter} from '@angular/core';\n\n@Component({\n  selector: 'app-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.css']\n})\nexport class ToolbarComponent implements OnInit {\n  @Input() userName;\n  @Output() userLogout = new EventEmitter();\n\n  userIn = false;\n  name = '';\n\n  constructor(private router:Router) {\n    this.router = router;\n   }\n\n  ngOnInit(): void {\n    \n  }\n\n  ngOnChanges(): void {\n    if(this.userName){\n      this.name = this.userName.firstName;\n      this.userIn = true;\n    }\n  }\n\n  onClickLogout(){\n    try {\n      axios.get('/api/auth/logout').then(\n          (res) => {\n            this.router.navigate(['login']);\n            this.userIn = false;\n            this.userLogout.emit(this.userIn);\n          }\n        );  \n    } catch(err) {\n        console.log(err);\n    }\n  }\n\n}\n","<p>\n    <mat-toolbar color=\"primary\">\n    <span *ngIf=\"!userIn\">Hello guest</span>\n    <span *ngIf=\"userIn\">Hello {{name}}</span>\n      <span class=\"header\">Welcome to GALA Shopping Site</span>\n      <span class=\"example-spacer\"></span>\n      <button *ngIf=\"userIn\" mat-raised-button color=\"warn\" (click)=\"onClickLogout()\" >Logout</button>\n    </mat-toolbar>\n</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'my-app';\n\n  \n\n}\n","<div class=\"content-body\">\n    <router-outlet></router-outlet>\n\n</div>\n\n","import { Component, OnInit ,Input} from '@angular/core';\nimport axios from 'axios';\nimport {FormControl, Validators, FormGroup} from '@angular/forms';\n\n@Component({\n  selector: 'app-add-product',\n  templateUrl: './add-product.component.html',\n  styleUrls: ['./add-product.component.css']\n})\nexport class AddProductComponent implements OnInit {\n  @Input() editProduct;\n\n  addProductForm = new FormGroup({\n    name : new FormControl('', [Validators.required, Validators.minLength(2), Validators.maxLength(15)]),\n    category : new FormControl('', [Validators.required]),\n    price : new FormControl('', [Validators.required, Validators.minLength(1), Validators.pattern('[0-9]+(\\\\.[0-9][0-9]?)?')]),\n    priceOption : new FormControl('', [Validators.required, Validators.minLength(2), Validators.maxLength(10)]),\n    picture : new FormControl('', [Validators.required, Validators.minLength(4)])\n  })\n\n  get name(){return this.addProductForm.get('name')}\n  get category(){return this.addProductForm.get('category')}\n  get price(){return this.addProductForm.get('price')}\n  get priceOption(){return this.addProductForm.get('priceOption')}\n  get picture(){return this.addProductForm.get('picture')}\n  \n\n\n  product ={\n    name: '',\n    category: 'None',\n    price: '',\n    priceOption: '',\n    picture:''\n  };\n\n  savePicture= '';\n  editMode = false;\n  \n\n  constructor() { }\n\n  ngOnInit(): void {\n    \n  }\n\n  clearInputs(){\n    // this.product = {\n    //   name: '',\n    //   category: 'None',\n    //   price: '',\n    //   priceOption: '',\n    //   picture:''\n    // };\n   \n    this.addProductForm.reset({\n      name: '',\n      category: '',\n      price: '',\n      priceOption: '',\n      picture:''\n    })\n\n   \n  }\n\n  nweProduct(){\n    this.editMode = false; \n    this.clearInputs();\n  }\n\n  // onChange({target: {value}}, field){\n  //   this.product[field] = value;\n  // }\n\n  fileChange(event){\n    this.savePicture = event.target.files[0];\n    // this.product.picture = `img/${event.target.files[0].name}`;\n    this.addProductForm.value.picture = `img/${event.target.files[0].name}`\n  }\n\n\n\n  savePic(){\n    const myFormData = new FormData();\n    myFormData.append('file', this.savePicture);\n    fetch('/api/upload', {\n      method: 'POST',\n      body: myFormData\n    }).then(res => res.json())\n      .then(data => {\n        if(data){\n          alert('Picture was saved');\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n  }\n\n  saveproduct(){\n    console.log(this.addProductForm.value);\n    try {\n      axios.post('/api/shopping/add', {\n        product: this.addProductForm.value\n      }).then(\n          (res) => {\n            if(res.status == 200)\n            alert('Product was add  successfully');\n            this.clearInputs();\n          }\n        );\n    } catch(err) {\n        console.log(err);\n    }\n  }\n\n  onSave(){\n    const {name, category, price, priceOption,  picture} = this.addProductForm.value;\n    if(\n      (name.length < 2 && name.length > 15)|| category == 'None' ||\n      price.length ==0 || priceOption.length <2 ||\n      picture.length < 7){\n        alert('invalid input - somting is missing');\n    }\n    else{\n      this.savePic();\n      this.saveproduct();\n    }\n  }\n\n  ngOnChanges(): void {\n    if(this.editProduct){\n      this.editProductInpits();\n    }\n  }\n\n  editProductInpits(){\n    this.editMode = true;\n    // console.log(this.editProduct);\n    // this.addProductForm.value.name = this.editProduct.name ;\n    // this.addProductForm.value.category = this.editProduct.category;\n    // this.addProductForm.value.price = this.editProduct.price;\n    // this.addProductForm.value.priceOption = this.editProduct.priceOption;\n    // this.addProductForm.value.picture = this.editProduct.picture;\n    // console.log(this.addProductForm.value);\n    this.addProductForm.setValue({\n      name: this.editProduct.name,\n      category: this.editProduct.category,\n      price:  this.editProduct.price,\n      priceOption: this.editProduct.priceOption,\n      picture: this.editProduct.picture\n    })\n    console.log(this.addProductForm.value);\n  }\n\n  onSaveEdit(){\n    try {\n      axios.post('/api/shopping/edit', {\n        product: this.addProductForm.value,\n        id: this.editProduct._id\n      }).then(\n          (res) => {\n            console.log(res);\n            if(res.status == 200){\n              this.clearInputs();\n              console.log( res.data);\n              alert('Changes submitted');\n              this.editMode = false;\n            }\n          }\n        ); \n    } catch(err) {\n        console.log(err);\n    }\n  }\n  \n}\n","<button *ngIf=\"editMode\" mat-raised-button color=\"primary\" class=\"add\" (click)=\"nweProduct()\"> Add New </button>\n<br/>\n\n<form name=\"addProductForm\" [formGroup]=\"addProductForm\">\n    <h3 *ngIf=\"!editMode\">Add New Product</h3>\n    <h3 *ngIf=\"editMode\">Edit Product</h3>\n    <div>\n        <mat-form-field class=\"full-width\">\n            <mat-label>Product Name</mat-label>\n            <input type=\"text\" formControlName=\"name\" matInput required [(ngModel)]='addProductForm.value.name'>\n            <mat-hint align=\"end\"> 2-15 characters</mat-hint>\n            <mat-error  *ngIf=\"name.invalid || name.hasError('required')\">Product Name is invalid! *Mantatory field</mat-error>\n        </mat-form-field>\n    </div>\n    \n    <div>\n        <mat-form-field class=\"full-width\">\n            <mat-label>Category</mat-label>\n            <mat-select formControlName=\"category\" [(value)]=\"addProductForm.value.category\" required >\n              <mat-option value=\"5fccefbd3920b7119804eafb\">Fruits & Vegetables</mat-option>\n              <mat-option value=\"5fccefd44e4a6660dc6a6c8e\">Eggs & Dairy</mat-option>\n              <mat-option value=\"5fccefe67dfe5252005a513d\">Bread & Bakery</mat-option>\n              <mat-option value=\"5fccf0013ab1f241b4f6702e\">Snacks & Candy</mat-option>\n              <mat-option value=\"5fccf0132895241abc08a7a8\">Beverages</mat-option>\n              <mat-option value=\"5fccf024e5ae544d94ec1fa2\">Meat & Fish</mat-option>\n              <mat-option value=\"5fccf03500966d07985595ca\">Frozen</mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"addProductForm.get('category').errors?.required\">Requried category</mat-error>\n        </mat-form-field>\n    </div>\n    \n  \n\n    <div>\n        <mat-form-field class=\"full-width\">\n            <mat-label>Product Price</mat-label>\n            <input formControlName=\"price\"  matInput  required [(ngModel)]='addProductForm.value.price'>\n            <mat-error  *ngIf=\"price.invalid || price.hasError('required') || price.hasError('pattern')\">\n                Product Price is invalid! *Mantatory field\n            </mat-error>\n            <!-- <mat-error  *ngIf=\"price.hasError('pattern') \">Numbers only</mat-error> -->\n        </mat-form-field>\n       \n    </div>\n\n    <div>\n        <mat-form-field class=\"full-width\">\n            <mat-label>Price Option</mat-label>\n            <input formControlName=\"priceOption\" \n            type=\"text\" \n            matInput \n            placeholder=\"kg/unit\" \n            required \n            [(ngModel)]='addProductForm.value.priceOption'>\n            <mat-error  *ngIf=\"priceOption.invalid || priceOption.hasError('required')\">Product Price is invalid! *Mantatory field</mat-error>\n            <mat-error  *ngIf=\"priceOption.hasError('maxlength') \">*Max length 10 characters</mat-error>\n        </mat-form-field>\n    </div>\n    \n    <div>\n        <label for=\"picture\">Choose product picture:</label>\n        <br/>\n        <input type=\"file\" id=\"savePicture\" accept=\"image/png, image/jpeg\" (change)=\"fileChange($event)\" />\n        <br/>\n        \n    </div>\n\n    <div>\n        <mat-form-field class=\"full-width\">\n            <mat-label>Product Picture</mat-label>\n            <input matInput  \n            formControlName=\"picture\"\n            placeholder=\"img/aaa.jpg\" \n            disabled\n            required \n            [(ngModel)]='addProductForm.value.picture' /> \n            <mat-hint> Choose pic to fill product picture</mat-hint>\n            <mat-error  *ngIf=\"picture.invalid || picture.hasError('required')\">Product Price is invalid! *Mantatory field</mat-error>\n        </mat-form-field>\n        \n    </div>\n    \n\n    <br/>\n    <br/>\n\n    <button mat-raised-button color=\"primary\" (click)=\"onSave()\" *ngIf=\"!editMode\" [disabled]=\"addProductForm.invalid\">Save</button>\n    <button mat-raised-button color=\"warn\" (click)=\"clearInputs()\" >Clear All</button>\n    <button mat-raised-button color=\"primary\" (click)=\"onSaveEdit()\" *ngIf=\"editMode\" >Save Changes</button>\n\n</form>\n\n\n\n<!-- <form class=\"example-form\">\n    <h3 *ngIf=\"!editMode\">Add New Product</h3>\n    <h3 *ngIf=\"editMode\">Edit Product</h3>\n    <mat-form-field class=\"example-full-width\">\n      <mat-label>Product Name</mat-label>\n      <input type=\"text\" [(ngModel)]='product.name' [ngModelOptions]=\"{standalone: true}\" matInput (keyup)=\"onChange($event, 'name')\" >\n      <mat-hint align=\"end\"> only 15 </mat-hint>\n    </mat-form-field>\n    <br/>\n    <mat-form-field >\n        <mat-label>Category</mat-label>\n        <mat-select [(value)]=\"product.category\" >\n          <mat-option value=\"5fccefbd3920b7119804eafb\">Fruits & Vegetables</mat-option>\n          <mat-option value=\"5fccefd44e4a6660dc6a6c8e\">Eggs & Dairy</mat-option>\n          <mat-option value=\"5fccefe67dfe5252005a513d\">Bread & Bakery</mat-option>\n          <mat-option value=\"5fccf0013ab1f241b4f6702e\">Snacks & Candy</mat-option>\n          <mat-option value=\"5fccf0132895241abc08a7a8\">Beverages</mat-option>\n          <mat-option value=\"5fccf024e5ae544d94ec1fa2\">Meat & Fish</mat-option>\n          <mat-option value=\"5fccf03500966d07985595ca\">Frozen</mat-option>\n        </mat-select>\n    </mat-form-field>\n    <br/>\n    <mat-form-field class=\"example-full-width\">\n        <mat-label>Product Price</mat-label>\n        <input type=\"number\" matInput (keyup)=\"onChange($event, 'price')\" [(ngModel)]='product.price' [ngModelOptions]=\"{standalone: true}\">\n    </mat-form-field>\n    <mat-form-field class=\"example-full-width\">\n        <mat-label>Price Option</mat-label>\n        <input type=\"text\" matInput (keyup)=\"onChange($event, 'priceOption')\" placeholder=\"kg/unit\" [(ngModel)]='product.priceOption' [ngModelOptions]=\"{standalone: true}\">\n    </mat-form-field>\n    <br/>\n    <label for=\"picture\">Choose product picture:</label>\n    <br/>\n    <input type=\"file\" id=\"savePicture\" accept=\"image/png, image/jpeg\" (change)=\"fileChange($event)\" >\n    <br/>\n    <mat-form-field class=\"example-full-width\">\n        <mat-label>Product Picture</mat-label>\n        <input type=\"text\" matInput \n        (keyup)=\"onChange($event, 'picture')\"  \n        [(ngModel)]='product.picture' \n        [ngModelOptions]=\"{standalone: true}\"\n        disabled> \n    </mat-form-field>\n    <br/>\n    <button mat-raised-button color=\"primary\" (click)=\"onSave()\" *ngIf=\"!editMode\">Save</button>\n    <button mat-raised-button color=\"primary\" (click)=\"onSaveEdit()\" *ngIf=\"editMode\">Save Changes</button>\n\n</form> -->\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { ShopComponent } from './shop/shop.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatChipsModule} from '@angular/material/chips';\nimport { ProductsComponent } from './products/products.component';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\nimport { CartComponent } from './cart/cart.component';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport { FormsModule } from '@angular/forms';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { ToolbarComponent } from './toolbar/toolbar.component';\nimport { ItemComponent } from './item/item.component';\nimport {MatListModule} from '@angular/material/list';\nimport { AddProductComponent } from './add-product/add-product.component';\n// import {Component} from '@angular/core';\nimport { MatSelectModule } from '@angular/material/select';\nimport { OrderComponent } from './order/order.component';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatIconModule} from '@angular/material/icon';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { DialogComponent } from './dialog/dialog.component';\nimport { WrapperComponent } from './wrapper/wrapper.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ShopComponent,\n    ProductsComponent,\n    CartComponent,\n    LoginComponent,\n    SignupComponent,\n    ToolbarComponent,\n    ItemComponent,\n    AddProductComponent,\n    OrderComponent,\n    DialogComponent,\n    WrapperComponent,\n    \n  ],\n  entryComponents: [DialogComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    MatChipsModule,\n    MatCardModule,\n    MatButtonModule,\n    MatInputModule,\n    MatGridListModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatListModule,\n    MatSelectModule,\n    MatFormFieldModule,\n    MatIconModule,\n    ReactiveFormsModule,\n    MatDialogModule,\n    // Component,\n    RouterModule.forRoot([\n      { path: 'login', component: LoginComponent },\n      { path: 'signup', component: SignupComponent },\n      // { path: 'welcome', component: WelcomeComponent },\n      { path: 'shop', component:  WrapperComponent},\n     \n    ]),\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit , Inject} from '@angular/core';\nimport { MAT_DIALOG_DATA,  } from '@angular/material/dialog';\nimport {FormControl, Validators, FormGroup} from '@angular/forms';\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.css']\n})\nexport class DialogComponent implements OnInit {\n\n  // quantityForm = new FormGroup({\n  //   price : new FormControl('', [Validators.required, Validators.minLength(1), Validators.pattern('[0-9]+(\\\\.[0-9][0-9]?)?')]),\n  // })\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any) { }\n\n\n\n  ngOnInit(): void {\n    \n  }\n\n}\n","<div>\n    <h2 mat-dialog-title> Choose {{data.name}} quantity:</h2>\n    <mat-form-field>\n        <mat-label>Enter quantity {{data.option}}</mat-label>\n        <input type=\"number\" matInput [(ngModel)]=\"data.quantity\">\n    </mat-form-field>\n    <mat-dialog-actions>\n        <button mat-button mat-dialog-close mat-dialog-close=\"cancel\">Cancel</button>\n        <button mat-button mat-dialog-close [mat-dialog-close]=\"data.quantity\">Add product</button>\n    </mat-dialog-actions>\n</div>\n\n\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport axios from 'axios';\nimport {Output, EventEmitter} from '@angular/core';\n\n@Component({\n  selector: 'app-item',\n  templateUrl: './item.component.html',\n  styleUrls: ['./item.component.css']\n})\nexport class ItemComponent implements OnInit {\n  @Input() cartItems;\n  @Input() finishOrder;\n  @Output() refreshCartItems = new EventEmitter();\n  \n  showItems = false\n  orderMode = false;\n  constructor() { }\n\n  ngOnInit(): void {\n    if(this.cartItems.length>0){\n      this.showItems = true;\n    }\n  }\n\n  onClick(idx){\n    this.deleteItemFromCart(this.cartItems[idx]._id)\n  }\n\n  deleteItemFromCart(itemId){\n    console.log('deleteItemFromCart');\n    console.log(itemId);\n    try {\n      axios.delete(`/api/cart/delete/${itemId}`).then(\n          (res) => {\n            if(res.status == 200){\n              this.refreshCartItems.emit();\n            }\n          }\n        );\n      \n    } catch(err) {\n        console.log(err);\n    }\n  }\n\n  ngOnChanges(): void {\n    if(this.cartItems.length>0){\n      this.showItems = true;\n    }\n    this.orderMode = this.finishOrder;\n  }\n\n}\n","<mat-list role=\"list\" *ngIf=\"showItems\">\n    <mat-list-item role=\"listitem\" *ngFor=\"let item of cartItems; index as idx\"  > \n        <div class=\"example-button-container\" *ngIf=\"!orderMode\">\n            <button mat-mini-fab color=\"warn\" aria-label=\"Example icon button with a delete icon\" (click)=\"onClick(idx)\">\n              <mat-icon >delete</mat-icon>\n            </button>\n        </div>\n        &nbsp;\n        {{item.product_id.name}} &nbsp;\n        {{item.quantity}} &nbsp;\n        {{item.product_id.priceOption}}<span *ngIf=\"item.quantity>1\">s </span>&nbsp;   \n        ${{item.item_price}}\n        <img src=\"{{item.product_id.picture}}\">\n    </mat-list-item>\n</mat-list>\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport axios from 'axios';\n\n@Component({\n  selector: 'app-shop',\n  templateUrl: './shop.component.html',\n  styleUrls: ['./shop.component.css']\n})\nexport class ShopComponent implements OnInit {\n  showCategories = false;\n  categories = [];\n  products = [];\n  showProductes = false;\n  showOrder = false;\n  showShop = true;\n  orderinfo='';\n\n  user = '';\n  dataOrder = '';\n  productEdit = '';\n  shouldUpdateCart = 0;\n \n  constructor(private router:Router) { }\n\n  ngOnInit(): void {\n    this.fetchCategory();\n  }\n\n  onClick(categoryId){\n    this.fetchProducts(categoryId);\n    this.showProductes = true;\n  }\n\n  fetchCategory(){\n    try {\n      axios.get(`/api/shopping/category`).then(\n          (res) => {\n            this.categories = res.data.row;\n            this.user = res.data.user.user;\n            this.showCategories = true;\n          }\n        );\n    } catch(err) {\n      if(err.status === 401){\n        this.router.navigate(['login']);\n      }\n      console.log(err);\n    }\n  }\n  \n  fetchProducts(id){\n    try {\n      axios.get(`/api/shopping/${id}`).then(\n          (res) => {\n            this.products = res.data.sort ( (a, b) => {\n              let nameA = a.name.toLowerCase();\n              let nameB = b.name.toLowerCase();\n              if(nameA < nameB){\n                return -1;\n              }\n            });\n          }\n        );\n    } catch(err) {\n      if(err.status === 401){\n        this.router.navigate(['login']);\n      }\n      console.log(err);\n    }\n  }\n\n  moveToOrder(data){\n    this.dataOrder = data;\n    this.showOrder=true;\n    this.showShop=false;\n  }\n\n  moveToShop(result){\n    this.showOrder=false;\n    this.showShop=true;\n\n  }\n\n  productToEdit(data){\n    this.productEdit = data;\n  }\n  \n  \n  refreshCart(value){\n    this.shouldUpdateCart = this.shouldUpdateCart +1;\n  }\n\n}\n","\n<app-toolbar  [userName]=\"user\"></app-toolbar>\n<div class=\"cart\">\n    <app-cart \n    [userData]=\"user\" \n    (orderinfo)=\"moveToOrder($event)\" \n    [productForEdit]=\"productEdit\" \n    [needToUpdate]=\"shouldUpdateCart\" \n    [backShopping]=\"showShop\">\n    </app-cart>\n</div>\n<div class=\"shop\">\n    <div *ngIf=\"showShop\">\n        <h1>Shop</h1>\n        <mat-chip-list class=\"categories\" >\n            <mat-chip color=\"primary\"  *ngFor=\"let category of categories\" (click)=\"onClick(category._id)\" > {{category.name}}</mat-chip>\n        </mat-chip-list>\n        <app-products \n        *ngIf=\"showProductes\" \n        [allProductes]=\"products\" \n        [userType]=\"user.isAdmin\" \n        (toEdit)=\"productToEdit($event)\" \n        (updateCart)=\"refreshCart($event)\">\n        </app-products>\n    </div>\n    <app-order *ngIf=\"showOrder\" (backToshop)=\"moveToShop($event)\" [userdetails]=\"user\" [cartIdAndPrice]=\"dataOrder\"></app-order>\n</div>\n\n","import { Component, OnInit , Input} from '@angular/core';\nimport axios from 'axios';\nimport {Output, EventEmitter} from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\nexport class CartComponent implements OnInit {\n  @Input() userData;\n  @Input() productForEdit;\n  @Input() needToUpdate;\n  @Input() backShopping;\n  @Output() orderinfo = new EventEmitter<object>();\n  \n  \n  items = [];\n  userName = '';\n  admin = '';\n  cartId = '';\n\n  total = 0;\n  productForSend = null;\n  orderMode = false; \n \n  constructor(private router:Router) { }\n\n  ngOnInit(): void {\n    this.fetchCartData();\n  }\n\n  ngOnChanges(): void {\n    if(this.userData){\n      this.userName = this.userData.firstName;\n      this.admin = this.userData.isAdmin;\n      if(!this.admin){\n        this.fetchCartData();\n      }\n    }\n    if(this.backShopping){\n      this.orderMode = false;\n    }\n    if(this.productForEdit){\n      this.productForSend = this.productForEdit;\n    }\n    if(this.needToUpdate){\n      this.fetchCartItems();\n    }\n  }\n\n  fetchCartData(){\n    if(this.cartId.length == 0){\n      try {\n        axios.get('/api/cart/getCartId').then(\n            (res) => {\n              if(res.status == 200){\n                console.log(res.data);\n                this.cartId = res.data.cart[0]._id;\n                this.fetchCartItems();\n              }\n            }\n          );\n      } catch(err) {\n        if(err.status === 401){\n          this.router.navigate(['login']);\n        }\n          console.log(err.status);\n      }\n    }\n    \n  }\n\n  fetchCartItems(){\n    try {\n      axios.get(`/api/cart/getCartItems/${this.cartId}`).then(\n          (res) => {\n            this.items = res.data.row;\n            if(this.items.length > 0){\n              this.totalPrice(this.items);\n            }\n          }\n        ); \n    } catch(err) {\n      if( err.status === 401){\n        this.router.navigate(['login']);\n      }\n        console.log(err);\n    }\n  }\n\n  order(cartId, price){\n    const data = {'id': cartId, 'total': price, invItems: this.items, name: this.userName};\n    this.orderinfo.emit(data);\n    this.orderMode = true;\n  }\n  \n  totalPrice(items){\n    this.total = 0;\n    for (let i=0; i<items.length; i++){\n      this.total = this.total + items[i].item_price;\n    }\n  }\n\n  getItems(){\n    this.fetchCartItems();\n  }\n\n}\n","<div *ngIf=\"userName\">\n    <div *ngIf=\"!admin\">\n        <h1>{{userName}}'s Cart</h1>\n        <app-item  [cartItems]=\"items\" [finishOrder]=\"orderMode\" (refreshCartItems)=\"getItems()\"></app-item>\n    </div>\n    <div *ngIf=\"admin\">\n        <h1>{{userName}} Admin</h1>\n        <app-add-product [editProduct]=\"productForSend\"></app-add-product>\n\n    </div>\n    <br/>\n    <div *ngIf=\"orderMode\" class=\"red\"> NO CHANGES PERMITTED HERE!</div>\n    <br/>\n    <div *ngIf=\"!admin && items.length > 0\" > \n        Total Order: $ {{total}}\n        <button mat-raised-button color=\"primary\" (click)=\"order(cartId, total)\" class=\"orderButton\" *ngIf=\"!orderMode\">Order</button>\n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-wrapper',\n  templateUrl: './wrapper.component.html',\n  styleUrls: ['./wrapper.component.css']\n})\nexport class WrapperComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  currentUser(data){\n    console.log(data);\n  }\n\n}\n","<app-shop></app-shop>\n","import { Component, OnInit } from '@angular/core';\nimport {Router, ActivatedRoute} from '@angular/router';\nimport axios from 'axios';\nimport {FormControl, Validators, FormGroup} from '@angular/forms';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  user = {\n    firstName: '',\n    lastName: '',\n    city: '',\n    street: '',\n    email: '',\n    password: ''\n  }\n\n  hide = true;\n\n  // signupForm : FormGroup;\n\n  signupForm = new FormGroup({\n    firstName : new FormControl('', [Validators.required, Validators.minLength(2), Validators.pattern('[a-zA-Z ]*')]),\n    lastName : new FormControl('', [Validators.required, Validators.minLength(2), Validators.pattern('[a-zA-Z ]*')]),\n    city : new FormControl('', Validators.required),\n    street : new FormControl('', [Validators.required, Validators.minLength(2)]),\n    email : new FormControl('', [Validators.required, Validators.email]),\n    password : new FormControl('', [Validators.required, Validators.minLength(4), Validators.pattern('^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$')])\n// , Validators.pattern('^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$')\n  })\n\n  get firstName(){return this.signupForm.get('firstName')}\n  get lastName(){return this.signupForm.get('lastName')}\n  get city(){return this.signupForm.get('city')}\n  get street(){return this.signupForm.get('street')}\n  get email(){return this.signupForm.get('email')}\n  get password(){return this.signupForm.get('password')}\n  \n  // firstName =  new FormControl('', [Validators.required, Validators.minLength(2)]);\n  // lastName = new FormControl('', [Validators.required, Validators.minLength(2)]);\n  // city = new FormControl('', [Validators.required, Validators.minLength(5)]);\n  // street = new FormControl('', [Validators.required, Validators.minLength(2)]);\n  // email = new FormControl('', [Validators.required, Validators.email]);\n  // password = new FormControl('', [Validators.required, Validators.minLength(4)]);\n\n  constructor(private router:Router) {\n    this.router = router;\n   }\n  //  Validators.pattern('[a-zA-Z]')\n\n  ngOnInit(): void {\n    // this.signupForm = new FormGroup({\n    //   firstName : new FormControl('', [Validators.required, Validators.minLength(2)]),\n    //   lastName : new FormControl('', [Validators.required, Validators.minLength(2)]),\n    //   city : new FormControl('', [Validators.required, Validators.minLength(5)]),\n    //   street : new FormControl('', [Validators.required, Validators.minLength(2)]),\n    //   email : new FormControl('', [Validators.required, Validators.email]),\n    //   password : new FormControl('', [Validators.required, Validators.minLength(4)])\n    // })\n  }\n\n  // getErrorMessage() {\n  //   if (this.email.hasError('required') || this.password.hasError('required') ||\n  //   this.firstName.hasError('required') || this.lastName.hasError('required') ||\n  //   this.city.hasError('required') || this.street.hasError('required')) {\n  //     return 'You must enter a value';\n  //   }\n  //   return this.email.hasError('email') ? 'Not a valid email' : '';\n  // }\n\n  getErrorMessage() {\n    const {firstName, lastName ,city ,street ,email, password} = this.signupForm.value;\n    if (email.hasError('required') || password.hasError('required') ||\n    firstName.hasError('required') || lastName.hasError('required') ||\n    city.hasError('required') || street.hasError('required')) {\n      return 'You must enter a valid name';\n    }\n    return email.hasError('email') ? 'Not a valid email' : '';\n  }\n\n  // onChange({target: {value}}, field){\n  //   this.user[field] = value;\n  // }\n\n  onClickLogin(){\n    this.router.navigate(['login']);\n  }\n\n  clickOnSignup(){\n    console.log(this.user);\n    console.log(this.signupForm.value);\n    // email.hasError('email') ||\n\n    const {firstName, lastName ,city ,street ,email, password} = this.signupForm.value;\n    if(firstName.length < 2 || \n      lastName.length < 2 || \n      city.length < 2 || \n      street.length < 2 || \n      email.length < 5 || \n      password.length <4){\n        alert('invalid input - Somthing is missing');\n    }\n    else{\n      this.signup();\n    }\n  }\n\n  signup(){\n    try {\n      axios.post('/api/auth/signup', {\n        // user: this.user\n        user: this.signupForm.value\n      }).then(\n          (res) => {\n            console.log(res);\n            this.router.navigate(['login']);\n          }\n        );  \n    } catch(err) {\n        console.log(err);\n    }\n  }\n\n}\n","<app-toolbar></app-toolbar>\n<div class=\"center\">\n    <h1>Sign UP Here</h1>\n    <form (ngSubmit)=\"clickOnSignup()\" name=\"signupForm\" [formGroup]=\"signupForm\">\n        <div>\n            <mat-form-field class=\"full-width\" >\n                <mat-label>First Name</mat-label>\n                <input formControlName=\"firstName\" matInput required />\n                <mat-error  *ngIf=\"firstName.invalid || firstName.hasError('required')\">First Name is invalid! *Mantatory field</mat-error>\n                <mat-error  *ngIf=\"firstName.hasError('minlength')\">Min length 2 Letters</mat-error>\n                <mat-error  *ngIf=\"firstName.hasError('pattern') \">Letters only</mat-error>\n            </mat-form-field>\n        </div>\n        <br/>\n        <div>\n            <mat-form-field class=\"full-width\">\n                <mat-label>Last Name</mat-label>\n                <input formControlName=\"lastName\" matInput required />\n                <mat-error  *ngIf=\"lastName.invalid || lastName.hasError('required')\">First Name is invalid! *Mantatory field</mat-error>\n                <mat-error  *ngIf=\"lastName.hasError('minlength')\">Min length 2 Letters</mat-error>\n                <mat-error  *ngIf=\"lastName.hasError('pattern') \">Letters only</mat-error>\n            </mat-form-field>\n        </div>\n        <br/>\n        <div>\n            <mat-form-field class=\"full-width\">\n                <mat-label>City</mat-label>\n                <mat-select formControlName=\"city\" [(value)]=\"user.city\" >\n                  <mat-option value=\"Tel-Aviv\">Tel-Aviv</mat-option>\n                  <mat-option value=\"Ramat Gan\">Ramat Gan</mat-option>\n                  <mat-option value=\"Jerusalem\">Jerusalem</mat-option>\n                  <mat-option value=\"Haifa\">Haifa</mat-option>\n                  <mat-option value=\"Rishon Lezion\">Rishon Lezion</mat-option>\n                  <mat-option value=\"Petah Tikva\">Petah Tikva</mat-option>\n                  <mat-option value=\"Ashdod\">Ashdod</mat-option>\n                  <mat-option value=\"Netanya\">Netanya</mat-option>\n                  <mat-option value=\"Beer Sheva\">Beer Sheva</mat-option>\n                  <mat-option value=\"Bnei Brak\">Bnei Brak</mat-option>\n                </mat-select>\n                <mat-error *ngIf=\"signupForm.get('city').errors?.required\">Requried city</mat-error>\n            </mat-form-field>\n        </div>\n\n        <div>\n            <mat-form-field class=\"full-width\">\n                <mat-label>Street</mat-label>\n                <input formControlName=\"street\" matInput required/>\n                <!-- <mat-error *ngIf=\"signupForm.get('street').errors?.required\" >Requried Street Name</mat-error> -->\n                <mat-error  *ngIf=\"street.hasError('required')\">Street Name is requried!</mat-error>\n                <mat-error  *ngIf=\"street.hasError('minlength') \">Street Name is invalid! *Min length 2 characters</mat-error>\n            </mat-form-field>\n        </div>\n        \n        <div>\n            <mat-form-field class=\"full-width\">\n                <mat-label>Email</mat-label>\n                <input formControlName=\"email\" matInput required placeholder=\"name@gmail.com\" />\n                <!-- <mat-error *ngIf=\"signupForm.get('email').errors?.required\">Requried valid email address</mat-error> -->\n                <mat-error  *ngIf=\"email.hasError('required')\">Email address is requried!</mat-error>\n                <mat-error  *ngIf=\"email.hasError('email') \">Email address is invalid!</mat-error>\n            </mat-form-field>\n        </div>\n\n        <div>\n            <mat-form-field class=\"full-width\" >\n                <mat-label>Password</mat-label>\n                <input formControlName=\"password\" matInput required [type]=\"hide ? 'password': 'text'\" />\n                <button mat-icon-button matSuffix (click)=\"hide = !hide\"\n                    [attr.aria-label]=\"'Hide Password'\" [attr.aria-pressed]=\"hide\">\n                    <mat-icon>{{ hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                </button>\n                <mat-hint> Requried 1 letter, 1 number & min 4 characters </mat-hint>\n                <!-- <mat-error *ngIf=\"signupForm.get('password').errors?.required\">Requried Password</mat-error> -->\n                <!-- <mat-error  *ngIf=\"password.hasError('required')\">Password is requried!</mat-error> -->\n                <mat-error  *ngIf=\"password.invalid || password.hasError('required')\">Password is invalid! *Mantatory field</mat-error>\n                <mat-error  *ngIf=\"password.hasError('minlength')\">Min length 4 characters</mat-error>\n                <mat-error  *ngIf=\"password.hasError('pattern') \">Requried 1 letter, 1 number</mat-error>\n            </mat-form-field>\n        </div>\n\n        <br/>\n        <br/>\n\n        <button mat-raised-button color=\"primary\" [disabled]=\"signupForm.invalid\">SignUp</button>\n\n    </form>\n\n    <!-- <mat-form-field class=\"example-full-width\">\n        <mat-label>First Name</mat-label>\n        <input matInput required type=\"text\" [formControl]=\"firstName\" (keyup)=\"onChange($event, 'firstName')\">\n        <mat-error *ngIf=\"firstName.invalid\">{{getErrorMessage()}}</mat-error>\n    </mat-form-field>\n    <br/> -->\n    <!-- <mat-form-field class=\"example-full-width\">\n        <mat-label>Last Name</mat-label>\n        <input matInput required type=\"text\" [formControl]=\"lastName\" (keyup)=\"onChange($event, 'lastName')\">\n        <mat-error *ngIf=\"lastName.invalid\">{{getErrorMessage()}}</mat-error>\n    </mat-form-field>\n    <br/>\n    <mat-form-field >\n        <mat-label>City</mat-label>\n        <mat-select [(value)]=\"user.city\" [formControl]=\"city\">\n          <mat-option value=\"Tel-Aviv\">Tel-Aviv</mat-option>\n          <mat-option value=\"Ramat Gan\">Ramat Gan</mat-option>\n          <mat-option value=\"Jerusalem\">Jerusalem</mat-option>\n          <mat-option value=\"Haifa\">Haifa</mat-option>\n          <mat-option value=\"Rishon Lezion\">Rishon Lezion</mat-option>\n          <mat-option value=\"Petah Tikva\">Petah Tikva</mat-option>\n          <mat-option value=\"Ashdod\">Ashdod</mat-option>\n          <mat-option value=\"Netanya\">Netanya</mat-option>\n          <mat-option value=\"Beer Sheva\">Beer Sheva</mat-option>\n          <mat-option value=\"Bnei Brak\">Bnei Brak</mat-option>\n        </mat-select>\n    </mat-form-field>\n    <br/>\n    <mat-form-field class=\"example-full-width\">\n        <mat-label>Street</mat-label>\n        <input matInput required type=\"text\" [formControl]=\"street\" (keyup)=\"onChange($event, 'street')\">\n        <mat-error *ngIf=\"street.invalid\">{{getErrorMessage()}}</mat-error>\n    </mat-form-field>\n    <br/>\n    <div>\n        <mat-form-field class=\"example-full-width\">\n            <mat-label>Email</mat-label>\n            <input matInput required [formControl]=\"email\" placeholder=\"aaa@gmail.com\" type=\"email\" (keyup)=\"onChange($event, 'email')\" >\n            <mat-error *ngIf=\"email.invalid\">{{getErrorMessage()}}</mat-error>\n        </mat-form-field>\n    </div>\n    <br/> -->\n    <!-- <mat-form-field class=\"example-full-width\">\n        <mat-label>Password</mat-label>\n        <input matInput required type=\"text\" [formControl]=\"password\" (keyup)=\"onChange($event, 'password')\" >\n        <mat-hint align=\"end\"> Min 4 characters</mat-hint>\n        <mat-error *ngIf=\"password.invalid\">{{getErrorMessage()}}</mat-error>\n    </mat-form-field> -->\n    <br/>\n    <!-- <button mat-raised-button color=\"primary\" (click)=\"clickOnSignup()\">SignUp</button> -->\n    <!-- <br/> -->\n    <button mat-raised-button color=\"link\" (click)=\"onClickLogin()\">Move to Login</button>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport {Output, EventEmitter} from '@angular/core';\nimport axios from 'axios';\nimport jsPDF from 'jspdf';\n// import * as jsPDF from 'jspdf';\nimport {FormControl, Validators, FormGroup } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-order',\n  templateUrl: './order.component.html',\n  styleUrls: ['./order.component.css']\n})\nexport class OrderComponent implements OnInit {\n  @Input() userdetails;\n  @Input() cartIdAndPrice;\n  @Output() backToshop = new EventEmitter();\n\n  order = {\n    city: '',\n    street: '',\n    shippingDate: '',\n    creditCard: ''\n  }\n\n  orderForm = new FormGroup({\n    city : new FormControl('', [Validators.required, Validators.minLength(5)]),\n    street : new FormControl('', [Validators.required, Validators.minLength(2)]),\n    shippingDate : new FormControl('', [Validators.required, Validators.minLength(2)]),\n    creditCard : new FormControl('', [Validators.required, Validators.minLength(16), Validators.maxLength(16),  Validators.pattern('[0-9 ]*')]),\n  })\n\n  get city(){return this.orderForm.get('city')}\n  get street(){return this.orderForm.get('street')}\n  get shippingDate(){return this.orderForm.get('shippingDate')}\n  get creditCard(){return this.orderForm.get('creditCard')}\n \n\n  // city = new FormControl('', [Validators.required, Validators.minLength(5)]);\n  // street = new FormControl('', [Validators.required, Validators.minLength(2)]);\n  // shippingDate = new FormControl('', [Validators.required, Validators.minLength(2)]);\n  // creditCard = new FormControl('', [Validators.required, Validators.minLength(16), Validators.maxLength(16)]);\n\n  pdf = false;\n  \n  shoppingMode = false;\n  dateNotAvailable = false;\n\n  newOrder = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n  }\n\n  getErrorMessage() {\n    const {city, street, shippingDate, creditCard} = this.orderForm.value;\n    if (city.hasError('required') || street.hasError('required') ||\n    shippingDate.hasError('required') || creditCard.hasError('required')) {\n      return 'You must enter a value';\n    }\n    return creditCard.hasError('creditCard') ? 'Not a valid creditCard' : '';\n  }\n\n  // getErrorMessage() {\n  //   if (this.city.hasError('required') || this.street.hasError('required') ||\n  //   this.shippingDate.hasError('required') || this.creditCard.hasError('required')) {\n  //     return 'You must enter a value';\n  //   }\n  //   return this.creditCard.hasError('creditCard') ? 'Not a valid creditCard' : '';\n  // }\n\n  goToShop(){\n    this.shoppingMode = true;\n    this.backToshop.emit(this.shoppingMode);\n  }\n\n  onChange({target: {value}}, field){\n    // this.order[field] = value;\n    if(field == 'shippingDate'){\n      this.cheackOrderDate(value);\n    }\n  }\n\n  autoFill({target: {value}}, field){\n    console.log(field);\n    console.log(this.userdetails[field]);\n\n    // this.order[field] = this.userdetails[field];\n    this.orderForm.value[field] = this.userdetails[field];\n    // this.orderForm.setValue({\n    //   field: this.userdetails[field],\n    // })\n    console.log(this.orderForm.value);\n\n  }\n\n  // autoFill({target: {value}}, field){\n  //   this.order[field] = this.userdetails[field];\n\n  // }\n\n  cheackOrderDate(date){\n    try {\n      axios.get(`/api/order/checkDate/${date}`).then(\n          (res) => {\n            if(res.data.length == 3){\n              this.dateNotAvailable = true;\n              this.order.shippingDate = '';\n              alert(` ${date} is not available - Please pick a new date`);\n            }\n            else{\n              this.dateNotAvailable = false;\n            }\n          }\n        );  \n    } catch(err) {\n        console.log(err);\n    }\n  }\n\n\n  sbmitOrder(){\n    const {city, street, shippingDate, creditCard} = this.orderForm.value;\n    if(city.length <3 || \n      street.length <3 || \n      shippingDate.length < 1 || \n      creditCard.length != 16 || \n      this.dateNotAvailable){\n      alert('Somting is missing');\n    }\n    else{\n      this.saveOrder();\n    }\n  }\n\n  // sbmitOrder(){\n  //   if(this.order.city.length <3 || \n  //     this.order.street.length <3 || \n  //     this.order.shippingDate.length < 1 || \n  //     this.order.creditCard.length != 16 || \n  //     this.dateNotAvailable){\n  //     alert('Somting is missing');\n  //   }\n  //   else{\n  //     this.saveOrder();\n  //   }\n  // }\n\n\n\n  saveOrder(){\n    const {city, street, shippingDate, creditCard} = this.orderForm.value;\n    let obj = {};\n    obj[\"customer_id\"] = this.userdetails._id;\n    obj[\"cart_id\"] = this.cartIdAndPrice.id;\n    obj[\"price\"] = this.cartIdAndPrice.total;\n    obj[\"delivery_city\"] = city;\n    obj[\"delivery_street\"] = street;\n    obj[\"delivery_date\"] = shippingDate;\n    obj[\"payment_4digi\"] = creditCard.slice(12,16);\n    try {\n      axios.post(`/api/order/addOrder`,{\n        obj\n      }).then(\n          (res) => {\n            this.newOrder = true;\n            this.pdf = true\n          }\n        );\n    } catch(err) {\n      console.log(err);\n    }\n  }\n\n\n  // saveOrder(){\n  //   let obj = {};\n  //   obj[\"customer_id\"] = this.userdetails._id;\n  //   obj[\"cart_id\"] = this.cartIdAndPrice.id;\n  //   obj[\"price\"] = this.cartIdAndPrice.total;\n  //   obj[\"delivery_city\"] = this.order.city;\n  //   obj[\"delivery_street\"] = this.order.street;\n  //   obj[\"delivery_date\"] = this.order.shippingDate;\n  //   obj[\"payment_4digi\"] = this.order.creditCard.slice(12,16);\n  //   try {\n  //     axios.post(`/api/order/addOrder`,{\n  //       obj\n  //     }).then(\n  //         (res) => {\n  //           this.newOrder = true;\n  //           this.pdf = true\n  //         }\n  //       );\n  //   } catch(err) {\n  //     console.log(err);\n  //   }\n  // }\n\n  startNeworder(){\n    this.createNewCart();\n  }\n\n  createNewCart(){\n    try {\n      axios.get('/api/cart/newCartId').then(\n          (res) => {\n            this.goToShop();\n          }\n        );   \n    } catch(err) {\n        console.log(err);\n    }\n  }\n\n  createPdf(){\n    const {city, street, shippingDate, creditCard} = this.orderForm.value;\n    const { invItems, total, id ,name} = this.cartIdAndPrice;\n    const doc = new jsPDF();\n    doc.text('GALA Shopping Site - Invoice' , 50, 30);\n    doc.text(`Invoice for: ${name} ` , 15, 40);\n    doc.text(`Shipping Date: ${shippingDate} ` , 15, 50);\n    // doc.text(`Shipping Date: ${this.order.shippingDate} ` , 15, 50);\n    doc.text(`Items ordered: ` , 15, 60);\n    let start = 60;\n    for(let i = 0; i < invItems.length; i++){\n      start = start + 5;\n      doc.text(`${invItems[i].quantity} ${invItems[i].product_id.name} $ ${invItems[i].item_price} ` , 15, start); \n    }\n    doc.text(`Total price of order: $ ${total} ` , 15, start+10);\n    doc.text('Thank you for shopping with us :)' , 50, start+30);\n    doc.text('See you soon on your next order' , 50, start+50);\n    doc.save(`invoice for ${id}`);\n    this.createNewCart();\n  }\n\n}\n\n\n","<h1>Order</h1>\n<div>\n    <button mat-raised-button color=\"primary\" (click)=\"goToShop()\" class=\"orderButton\" *ngIf=\"!newOrder\">Go Back To Shop</button>\n</div>\n\n<div class=\"shippingDiv\" *ngIf=\"!pdf\">\n    Shipping Details:\n    <form name=\"orderForm\" [formGroup]=\"orderForm\">\n        <div>\n            \n            <mat-form-field class=\"full-width\">\n                <mat-label>City</mat-label>\n                <input formControlName=\"city\" matInput required type=\"text\" (dblclick)=\"autoFill($event, 'city')\" [(ngModel)]='orderForm.value.city'>\n                <mat-hint > Double click to fill in your city from signup</mat-hint>\n            </mat-form-field>\n\n        </div>\n       \n        <div>\n            <mat-form-field class=\"full-width\">\n                <mat-label>Street</mat-label>\n                <input formControlName=\"street\" matInput required type=\"text\" (dblclick)=\"autoFill($event, 'street')\" [(ngModel)]=\"orderForm.value.street\">\n                <mat-hint > Double click to fill in your street from signup</mat-hint>\n            </mat-form-field>\n\n        </div>\n\n        \n        <div>\n            <mat-form-field class=\"full-width\">\n                <mat-label>Shippong Date</mat-label>\n                <input formControlName=\"shippingDate\" matInput required type=\"date\" (change)=\"onChange($event, 'shippingDate')\">\n            </mat-form-field>\n\n        </div>\n        \n\n        <div>\n            Payments Details:\n            <br/>\n            <mat-form-field class=\"full-width\">\n                <mat-label>Credit Card</mat-label>\n                <input formControlName=\"creditCard\" matInput required />\n                <mat-hint >16 numbers no space</mat-hint>\n            </mat-form-field>\n        </div>\n        \n        <br/>\n        <button mat-raised-button color=\"primary\" (click)=\"sbmitOrder()\" [disabled]=\"orderForm.invalid\">Order</button>\n\n    </form>\n    \n</div>\n\n\n\n<div *ngIf=\"pdf\">\n    <h2 class=\"orderDone\">Order successfully completed</h2>\n    <button mat-raised-button color=\"primary\" (click)=\"createPdf()\" >Download PDF & Start New Order</button>\n    <br/>\n    <button mat-raised-button color=\"primary\" (click)=\"startNeworder()\" >Start New Order</button>\n</div>\n\n\n\n\n<!-- <div class=\"shippingDiv\" *ngIf=\"!pdf\">\n    Shipping Details:\n    <br/>\n    <mat-form-field class=\"example-full-width\">\n        <mat-label>City</mat-label>\n        <input matInput required type=\"text\" [formControl]=\"city\" (keyup)=\"onChange($event, 'city')\" (dblclick)=\"autoFill($event, 'city')\" [(ngModel)]=\"order.city\">\n        <mat-hint > Double click to fill in your city from signup</mat-hint>\n    </mat-form-field>\n    <br/>\n    <br/>\n    <mat-form-field class=\"example-full-width\">\n        <mat-label>Street</mat-label>\n        <input matInput required type=\"text\" [formControl]=\"street\" (keyup)=\"onChange($event, 'street')\" (dblclick)=\"autoFill($event, 'street')\" [(ngModel)]=\"order.street\">\n        <mat-hint > Double click to fill in your street from signup</mat-hint>\n    </mat-form-field>\n    <br/>\n    <br/>\n    <mat-form-field class=\"example-full-width\">\n        <mat-label>Shippong Date</mat-label>\n        <input matInput required type=\"date\" [formControl]=\"shippingDate\" (change)=\"onChange($event, 'shippingDate')\">\n    </mat-form-field>\n    <br/>\n    Payments:\n    <br/>\n    <mat-form-field class=\"example-full-width\">\n        <mat-label>Credit Card</mat-label>\n        <input matInput required type=\"number\" [formControl]=\"creditCard\" (keyup)=\"onChange($event, 'creditCard')\">\n        <mat-hint > 16 numbers no space</mat-hint>\n    </mat-form-field>\n    <br/>\n    <br/>\n    <button mat-raised-button color=\"primary\" (click)=\"sbmitOrder()\" >Order</button>\n</div> -->\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {Router, ActivatedRoute} from '@angular/router';\nimport axios from 'axios';\nimport {Output, EventEmitter} from '@angular/core';\nimport {FormControl, Validators, FormGroup} from '@angular/forms';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  @Output() userInfo = new EventEmitter();\n\n  hide = true;\n\n  // userEmail = '';\n  // email = new FormControl('', [Validators.required, Validators.email]);\n  // password = '';\n\n  user = '';\n  userConected = false;\n  totalProducts = null;\n  totalOrders = null;\n\n  cartOpen = false;\n  orderDone = false;\n  newUser = false;\n\n  cart_id = '';\n  cart_open_date= '';\n  lastOrder = '';\n\n  loginForm = new FormGroup({\n    userEmail : new FormControl('', [Validators.required, Validators.email]),\n    password : new FormControl('', [Validators.required, Validators.minLength(4), Validators.pattern('^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$')])\n  })\n\n \n  get userEmail(){return this.loginForm.get('userEmail')}\n  get password(){return this.loginForm.get('password')}\n\n  constructor(private router:Router) {\n    this.router = router;\n   }\n\n  ngOnInit(): void {\n    this.fetchShopData();\n  }\n\n  // getErrorMessage() {\n  //   if (this.email.hasError('required')) {\n  //     return 'You must enter a value';\n  //   }\n  //   return this.email.hasError('email') ? 'Not a valid email' : '';\n  // }\n\n  // nameType({target: {value}}){\n  //   this.userEmail = value;\n  // }\n\n  // passwordType({target: {value}}){\n  //   this.password = value;\n  // }\n\n  onClickSignup(){\n    this.router.navigate(['signup']);\n  }\n\n  onClickLogin(){\n    // this.email.hasError('email')\n    console.log(this.loginForm.value);\n    const {userEmail, password} = this.loginForm.value;\n    if(\n      userEmail.length < 5 || \n      password.length <4){\n        alert('invalid input - Somthing is missing');\n    }\n    else{\n     this.login();\n    //  this.userEmail = '';\n    //  this.password = '';\n    }\n  }\n\n\n  onStart(){\n    console.log(this.newUser)\n    if(this.newUser){\n      this.createNewCart();\n    }\n    console.log(this.orderDone, this.cartOpen);\n    if(this.orderDone && !this.cartOpen){\n      this.createNewCart();\n    }\n    else{\n      this.router.navigate(['shop']);\n    } \n  }\n\n\n  login(){\n    console.log('login fun');\n    try {\n      axios.post('/api/auth/login', {\n        username: this.loginForm.value.userEmail, password: this.loginForm.value.password}).then(\n          (res) => {\n            this.user = res.data;\n            if(res.data){\n              this.userConected = true;\n              if(!res.data.isAdmin){\n                this.fetchCartData();\n              }\n              else{\n                this.router.navigate(['shop']);\n              } \n            }\n            this.userInfo.emit(this.user);\n          }\n        );\n    } catch(err) {\n        alert('Email or Password is not valid ');\n        console.log(err);\n    }\n  }\n\n  fetchShopData(){\n    try {\n      axios.get('/api/shop/shopData').then(\n          (res) => {\n            this.totalProducts = res.data.productCount;\n            this.totalOrders = res.data.orderCount;\n          }\n        );   \n    } catch(err) {\n        console.log(err);\n    }\n  }\n\n  fetchCartData(){\n    console.log('fetchCartData func');\n    \n    try {\n      axios.get('/api/cart/getCartId').then(\n          (res) => {\n            if(res.status == 200){\n              const {cart, orderLast } = res.data;\n              console.log(cart.length, res.data);\n              if(cart.length > 0){\n                console.log(cart.length);\n                console.log(orderLast);\n                this.cartOpen = true;\n                this.cart_id = cart[0]._id;\n                this.cart_open_date = cart[0].created_at.slice(0,10);\n              }\n              // if(orderLast.length > 0)\n              if(orderLast && orderLast._id){\n                console.log(orderLast.length);\n                console.log(orderLast._id);\n                console.log(orderLast);\n                this.orderDone = true;\n                this.lastOrder = orderLast.updated_at.slice(0,10);\n              }\n              if(cart.length == 0 && orderLast.length == 0){\n                console.log(cart.length == 0 && orderLast == 0);\n                console.log(orderLast.length);\n                this.newUser = true;\n              }\n            }\n          }\n        );\n    } catch(err) {\n        console.log(err);\n    }\n  }\n\n  createNewCart(){\n    try {\n      axios.get('/api/cart/newCartId').then(\n          (res) => {\n            if(res){\n              this.router.navigate(['shop']);\n            } \n          }\n        );   \n    } catch(err) {\n        console.log(err);\n        if( err.status === 401){\n          this.router.navigate(['login']);\n        }\n    }\n  }\n\n  removeUserInfo(){\n    this.userConected = false;\n  }\n  \n}\n","<app-toolbar  [userName]=\"user\" (userLogout)=\"removeUserInfo()\"></app-toolbar>\n\n<div class=\"loingDiv\">\n    <h1>Login Here</h1>\n    <form (ngSubmit)=\"onClickLogin()\" name=\"loginForm\" [formGroup]=\"loginForm\">\n        \n        <div>\n            <mat-form-field class=\"full-width\">\n                <mat-label>Email</mat-label>\n                <input formControlName=\"userEmail\" matInput required placeholder=\"name@gmail.com\" />\n                <!-- <mat-error *ngIf=\"signupForm.get('email').errors?.required\">Requried valid email address</mat-error> -->\n\n                <mat-error  *ngIf=\"userEmail.hasError('required')\">Email address is requried!</mat-error>\n                <mat-error  *ngIf=\"userEmail.hasError('email') \">Email address is invalid!</mat-error>\n            </mat-form-field>\n        </div>\n\n        <div>\n            <mat-form-field class=\"full-width\" >\n                <mat-label>Password</mat-label>\n                <input formControlName=\"password\" matInput required [type]=\"hide ? 'password': 'text'\" />\n                <button mat-icon-button matSuffix (click)=\"hide = !hide\"\n                    [attr.aria-label]=\"'Hide Password'\" [attr.aria-pressed]=\"hide\">\n                    <mat-icon>{{ hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                </button>\n                <mat-hint> Requried 1 letter, 1 number & min 4 characters </mat-hint>\n                <!-- <mat-error *ngIf=\"signupForm.get('password').errors?.required\">Requried Password</mat-error> -->\n                <!-- <mat-error  *ngIf=\"password.hasError('required')\">Password is requried!</mat-error> -->\n\n                <mat-error  *ngIf=\"password.invalid || password.hasError('required')\">Password is invalid! *Mantatory field</mat-error>\n                <mat-error  *ngIf=\"password.hasError('minlength')\">Min length 4 characters</mat-error>\n                <mat-error  *ngIf=\"password.hasError('pattern') \">Requried 1 letter, 1 number</mat-error>\n            </mat-form-field>\n        </div>\n\n        <br/>\n        <br/>\n\n        <button mat-raised-button color=\"primary\" [disabled]=\"loginForm.invalid\">Login</button>\n\n    </form>\n\n    <!-- <mat-form-field class=\"example-full-width\">\n        <mat-label>Email</mat-label>\n        <input matInput required placeholder=\"aaa@gmail.com\" type=\"text\" (keyup)=\"nameType($event)\" [(ngModel)]=\"userEmail\">\n    </mat-form-field>\n    <br/>\n    <mat-form-field class=\"example-full-width\">\n        <mat-label>Password</mat-label>\n        <input matInput required type=\"text\" (keyup)=\"passwordType($event)\" [(ngModel)]=\"password\">\n        <mat-hint align=\"end\"> Min 4 characters</mat-hint>\n    </mat-form-field>\n    <br/>\n    <button mat-raised-button color=\"primary\" (click)=\"onClickLogin()\">Login</button> -->\n    <br/>\n    <button mat-raised-button color=\"link\" (click)=\"onClickSignup()\">Move to Sign Up</button>\n</div>\n\n<div class=\"loingDiv\">\n    <!-- <h1>GALA Shopping Site</h1> -->\n    <img src=\"img/shopping.jpg\" class=\"shoppingImg\">\n    <h2 class=\"siteInfoText\"> Here you can order all the groceries you need </h2>\n    <h2 class=\"siteInfoText\">  without leaving your home</h2>   \n    <h2 class=\"siteInfoText\"> Items will be delivered directly to you </h2> \n    <h4 class=\"siteInfoText\">  *We deliver only to the largest cities in Israel </h4>    \n</div>\n\n<div class=\"loingDiv\">\n    <h3>Available products in our store: {{totalProducts}} </h3>\n    <h3>Number of orders submitted in our store: {{totalOrders}}</h3>\n    <div class=\"yellow\" *ngIf=\"userConected\">\n        <h1 class=\"yellow\"> Welcome \n            <span *ngIf=\"user.isAdmin\">Admin - </span>\n            {{user.firstName}} \n        </h1>\n        <div *ngIf=\"!newUser\">\n            <h3 class=\"yellow\" *ngIf=\"cartOpen\"> You have an open cart from {{cart_open_date}} </h3>\n            <h3 class=\"yellow\" *ngIf=\"orderDone\"> Your last purchase was on {{lastOrder}}</h3>\n        </div>\n        <div *ngIf=\"newUser\">\n            <h3 class=\"yellow\" > First Time Shopping :) Enjoy</h3>\n        </div>\n        <button *ngIf=\"!user.isAdmin && !cartOpen\" mat-raised-button color=\"primary\" (click)=\"onStart()\">Start Shopping</button>\n        <button *ngIf=\"cartOpen\" mat-raised-button color=\"primary\" (click)=\"onStart()\">Continue Shopping</button>\n    </div> \n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Component, OnInit, Input } from '@angular/core';\nimport axios from 'axios';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogComponent } from '../dialog/dialog.component';\nimport {Output, EventEmitter} from '@angular/core';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\nexport class ProductsComponent implements OnInit {\n  @Input() allProductes;\n  @Input() userType;\n  @Output() toEdit = new EventEmitter();\n  @Output() updateCart = new EventEmitter();\n\n  itemAddToCart = {};\n  userAdmin = '';\n  constructor(public dialog: MatDialog) { \n  }\n\n  ngOnInit(): void {\n       this.userAdmin = this.userType;\n  }\n  \n  onAddToCart(id, price, qnt){\n      if(id && qnt ){\n      try {\n        axios.post('/api/cart/addItem', {\n          product_id: id,\n          quantity: qnt,\n          item_price: price*qnt,\n          }).then(\n            (res) => {\n              if(res.status == 200){\n                this.toUpdateCart();\n              }\n            }\n          ); \n      } catch(err) {\n          console.log(err);\n      }\n    }\n    else{\n      alert('Somthing is missing');\n    } \n  }\n\n  openDialog(idx){\n    const {priceOption, name, _id, price} = this.allProductes[idx];\n    let dialogRef = this.dialog.open(DialogComponent, {data: {option: priceOption, name}});\n    dialogRef.afterClosed().subscribe(result => {\n      if(result != \"cancel\"){\n        this.onAddToCart(_id, price, result);\n      }\n    });\n  }\n\n  edit(idx){\n    let productObj = this.allProductes[idx];\n    this.toEdit.emit(productObj);\n  }\n\n  toUpdateCart(){\n    this.updateCart.emit(true);\n  }\n\n}\n","<mat-grid-list cols=\"4\" rowHeight=\"200px\">\n    <mat-grid-tile colspan=\"1\" *ngFor=\"let product of allProductes; index as idx\">\n        <mat-card class=\"example-card\">\n            <mat-card-header class=\"center\">\n                <mat-card-title >{{product.name}} </mat-card-title>\n                <mat-card-title >${{product.price}} per {{product.priceOption}} </mat-card-title>\n            </mat-card-header>\n            <mat-card-content class=\"picMiddle\">\n                <img mat-card-image src=\"{{product.picture}}\" class=\"pic\">\n            </mat-card-content>\n            <mat-card-footer>\n                <mat-card-actions>\n                    <button mat-raised-button color=\"primary\" (click)=edit(idx) *ngIf=\"userAdmin\">Edit Product</button>\n                    <button mat-raised-button color=\"primary\" (click)=\"openDialog(idx)\" *ngIf=\"!userAdmin\">Add to cart</button>\n                </mat-card-actions>\n            </mat-card-footer>\n        </mat-card>\n    </mat-grid-tile>\n</mat-grid-list>\n\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}